<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">

<service_bundle type='manifest' name='mgs'>

<service name='system/illumos/mgs' type='service' version='1'>
  <create_default_instance enabled='false' />
  <single_instance />

  <dependency name='multi_user' grouping='require_all' restart_on='none'
    type='service'>
  <service_fmri value='svc:/milestone/multi-user:default' />
  </dependency>

  <!--
    Most omicron services run their binary under `ctrun` because they spawn
    child processes that should be killed if the service is killed. However,
    this interferes with sending SIGUSR1 as the refresh method (it's sent to
    ctrun which then terminates), and MGS spawns _no_ child processes. We
    therefore omit `ctrun` to allow the simple `:kill -USR1` refresh method
    below.
  -->
  <exec_method type='method' name='start'
    exec='/opt/oxide/mgs/bin/mgs run /var/svc/manifest/site/mgs/config.toml --address %{config/address} --id %{config/id} &amp;'
    timeout_seconds='0' />
  <exec_method type='method' name='refresh' exec=':kill -USR1' timeout_seconds='0' />
  <exec_method type='method' name='stop' exec=':kill' timeout_seconds='0' />

  <property_group name='config' type='application'>
    <propval name='id' type='astring' value='unknown' />
    <propval name='address' type='astring' value='unknown' />
  </property_group>

  <property_group name='startd' type='framework'>
    <propval name='duration' type='astring' value='contract' />
  </property_group>

  <stability value='Unstable' />

  <template>
    <common_name>
      <loctext xml:lang='C'>Oxide Management Gateway Service</loctext>
    </common_name>
    <description>
      <loctext xml:lang='C'>Server for communicating with Oxide Service Processors via the management network</loctext>
    </description>
  </template>
</service>

</service_bundle>
