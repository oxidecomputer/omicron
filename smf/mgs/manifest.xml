<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">

<service_bundle type='manifest' name='mgs'>

<service name='oxide/mgs' type='service' version='1'>
  <create_default_instance enabled='false' />

  <dependency name='multi_user' grouping='require_all' restart_on='none'
    type='service'>
  <service_fmri value='svc:/milestone/multi-user:default' />
  </dependency>

  <!--
    Most omicron services run their binary under `ctrun` because they spawn
    child processes that should be killed if the service is killed. However,
    this interferes with sending SIGUSR1 as the refresh method (it's sent to
    ctrun which then terminates), and MGS spawns _no_ child processes. We
    therefore omit `ctrun` to allow the simple `:kill -USR1` refresh method
    below.
  -->
  <exec_method type='method' name='start'
    exec='/opt/oxide/mgs/bin/mgs run --id-and-address-from-smf /var/svc/manifest/site/mgs/config.toml &amp;'
    timeout_seconds='0' />
  <exec_method type='method' name='refresh' exec=':kill -USR1' timeout_seconds='0' />
  <exec_method type='method' name='stop' exec=':kill' timeout_seconds='0' />

  <property_group name='config' type='application'>
    <!--
      `config/id` is expected to have a single value; sled-agent will replace
      "unknown" with a UUID as a part of starting us.
    -->
    <propval name='id' type='astring' value='unknown' />
    <!--
      `config/rack_id` is expected to have a single value; sled-agent will replace
      "unknown" with a UUID when it learns about it. This should happen in the same
      refresh where the underlay address is provisioned into `config/address`.
    -->
    <propval name='rack_id' type='astring' value='unknown' />
    <!--
      `config/address` is allowed to have multiple values, so we do not seed it
      with an initial `unknown` that sled-agent would need to delete.
    -->
    <property name='address' type='astring' />
  </property_group>

  <property_group name='startd' type='framework'>
    <propval name='duration' type='astring' value='contract' />
  </property_group>

  <stability value='Unstable' />

  <template>
    <common_name>
      <loctext xml:lang='C'>Oxide Management Gateway Service</loctext>
    </common_name>
    <description>
      <loctext xml:lang='C'>Server for communicating with Oxide Service Processors via the management network</loctext>
    </description>
  </template>
</service>

</service_bundle>
