# Sled Agent Configuration

# Identifies whether sled agent treats itself as a scrimlet or a gimlet.
#
# If this is set to "scrimlet", the sled agent treats itself as a scrimlet.
# If this is set to "gimlet", the sled agent treats itself as a gimlet.
# If this is set to "auto":
# - On illumos, the sled automatically detects whether or not it is a scrimlet.
# - On all other platforms, the sled assumes it is a gimlet.
sled_mode = "scrimlet"

# Identifies the revision of the sidecar that is attached, if one is attached.
# TODO: This field should be removed once Gimlets have the ability to auto-detect
# this information.
sidecar_revision.soft_propolis = { front_port_count = 2, rear_port_count = 4 }

# Setting this to true causes sled-agent to always report that its time is
# in-sync, rather than querying its NTP zone.
skip_timesync = false

vdevs = [
  "m2_g3_0.vdev",
  "m2_g3_1.vdev",

  "u2_g3_0.vdev",
  "u2_g3_1.vdev",
  "u2_g3_2.vdev",
  "u2_g3_3.vdev",
  "u2_g3_4.vdev",
]

# Percentage of usable physical DRAM to use for the VMM reservoir, which
# guest memory is pulled from.
vmm_reservoir_percentage = 0

# An optional data link from which we extract a MAC address.
# This is used as a unique identifier for the bootstrap address.
#
# If empty, this will be equivalent to the first result from:
# $ dladm show-phys -p -o LINK
data_link = "vioif1"

# On a multi-sled system, transit-mode Maghemite runs in the `oxz_switch` zone
# to configure routes between sleds.  This runs over the Sidecar's rear ports
# (whether simulated with SoftNPU or not).  On a Gimlet deployed in a rack,
# tfportd will create the necessary links and Maghemite will be configured to
# use those.  But on non-Gimlet systems, you need to specify physical links to
# be passed into the `oxz_switch` zone for this purpose.  You can skip this if
# you're deploying a single-sled system.
switch_zone_maghemite_links = [
    "tfportrear0_0",
    "tfportrear1_0",
    "tfportrear2_0",
    "tfportrear3_0",
]

# The data links that sled-agent will treat as a real gimlet cxgbe0/cxgbe1
# links.
data_links = ["vioif1", "vioif2"]

[dropshot]
# Host OS images are just over 800 MiB currently; set this to 2 GiB to give some
# breathing room.
default_request_body_max_bytes = 1048576

[log]
level = "info"
mode = "file"
path = "/dev/stdout"
if_exists = "append"

# These are pre-generated keys and roots designed to be used for testing.
# Create your own if you need to test a multi-node system
# See the .kdl file for use with pki-playground for generating
[sprockets]
resolve = { which = "local", priv_key = "/opt/oxide/sled-agent/pkg/sprockets-auth.key.pem", cert_chain = "/opt/oxide/sled-agent/pkg/sprockets-chain.pem" }
roots = ["/opt/oxide/sled-agent/pkg/root.cert.pem"]
