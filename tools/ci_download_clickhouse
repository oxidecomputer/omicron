#!/bin/bash

#
# ci_download_clickhouse: fetches the appropriate ClickHouse binary tarball
# based on the currently running operating system, unpacks it, and creates a
# copy called "clickhouse", all in the current directory.
#

set -o pipefail
set -o xtrace
set -o errexit

SOURCE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
ARG0="$(basename ${BASH_SOURCE[0]})"

# If you change this, you must also update the md5sums below
CIDL_VERSION="v21.7"
source "$SOURCE_DIR/clickhouse_checksums"
CIDL_ASSEMBLE_DIR="./clickhouse"

# Download from manually-populated S3 bucket for now
CIDL_URL_BASE="https://oxide-clickhouse-build.s3.us-west-2.amazonaws.com"

function main
{
	#
	# Process command-line arguments.  We generally don't expect any, but
	# we allow callers to specify a value to override OSTYPE, just for
	# testing.
	#
	if [[ $# != 0 ]]; then
		CIDL_OS="$1"
		shift
	else
		CIDL_OS="$OSTYPE"
	fi

	if [[ $# != 0 ]]; then
		echo "unexpected arguments" >&2
		exit 2
	fi

	# Configure this program
	configure_os "$CIDL_OS"
	CIDL_URL="$CIDL_URL_BASE/$CIDL_FILE"

	# Download the file.
	echo "URL: $CIDL_URL"
	echo "Local file: $CIDL_FILE"
	do_download_curl "$CIDL_URL" "$CIDL_FILE" || \
	    fail "failed to download file"

	# Verify the md5sum.
	calculated_md5="$($CIDL_MD5FUNC "$CIDL_FILE")" || \
	    fail "failed to calculate md5sum"
	if [[ "$calculated_md5" != "$CIDL_MD5" ]]; then
		fail "md5sum mismatch \
		    (expected $CIDL_MD5, found $calculated_md5)"
	fi

	# Unpack the tarball into a local directory
	do_untar "$CIDL_FILE" "$CIDL_ASSEMBLE_DIR"

	# Run the binary as a sanity-check.
	"$CIDL_ASSEMBLE_DIR/clickhouse" server --version
}

function fail
{
	echo "$ARG0: $@" >&2
	exit 1
}

function configure_os
{
	echo "current directory: $PWD"
	echo "configuring based on OS: \"$1\""
	case "$1" in
		darwin*)
            CIDL_PLATFORM="macos"
			CIDL_MD5="$CIDL_MD5_DARWIN"
			CIDL_MD5FUNC="do_md5"
			;;
		linux-gnu*) 
            CIDL_PLATFORM="linux"
			CIDL_MD5="$CIDL_MD5_LINUX"
			CIDL_MD5FUNC="do_md5sum"
			;;
		solaris*)
            CIDL_PLATFORM="illumos"
			CIDL_MD5="$CIDL_MD5_ILLUMOS"
			CIDL_MD5FUNC="do_md5sum"
			;;
		*)
			fail "unsupported OS: $1"
			;;
	esac

	CIDL_DIR="clickhouse-$CIDL_VERSION"
	CIDL_FILE="$CIDL_DIR.$CIDL_PLATFORM.tar.gz"
}

function do_download_curl
{
	curl --silent --show-error --fail --location --output "$2" "$1"
}

function do_md5
{
	md5 < "$1"
}

function do_md5sum
{
	md5sum < "$1" | awk '{print $1}'
}

function do_untar
{
    mkdir -p "$2" && tar xzf "$1" -C "$2"
}

main "$@"
