#!/bin/bash

#
# ci_download_dendrite_openapi: fetches the appropriate dendrite openapi spec.
#

set -o pipefail
set -o xtrace
set -o errexit

SOURCE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
ARG0="$(basename "${BASH_SOURCE[0]}")"

TARGET_DIR="out"
# Location where intermediate artifacts are downloaded / unpacked.
DOWNLOAD_DIR="$TARGET_DIR/downloads"

source "$SOURCE_DIR/dendrite_openapi_version"

URL="https://buildomat.eng.oxide.computer/public/file/oxidecomputer/dendrite/openapi/$COMMIT/dpd.json"
LOCAL_FILE="$DOWNLOAD_DIR/dpd-$COMMIT.json"

function main
{
	if [[ $# != 0 ]]; then
		echo "unexpected arguments" >&2
		exit 2
	fi

	# Download the file.
	echo "URL: $URL"
	echo "Local file: $LOCAL_FILE"

	local DO_DOWNLOAD="true"
	if [[ -f "$LOCAL_FILE" ]]; then
		calculated_sha2="$(do_sha256sum "$LOCAL_FILE")" || \
				fail "failed to calculate sha256sum"
		if [[ "$calculated_sha2" == "$SHA2" ]]; then
			DO_DOWNLOAD="false"
		fi
	fi

	mkdir -p "$DOWNLOAD_DIR"

	if [ "$DO_DOWNLOAD" == "true" ]; then
	echo "Downloading..."
		 do_download_curl "$URL" "$LOCAL_FILE" || \
			fail "failed to download file"

		# Verify the sha256sum.
		calculated_sha2="$(do_sha256sum "$LOCAL_FILE")" || \
				fail "failed to calculate sha256sum"
		if [[ "$calculated_sha2" != "$SHA2" ]]; then
			fail "sha256sum mismatch \
					(expected $SHA2, found $calculated_sha2)"
		fi

	fi
}

function fail
{
	echo "$ARG0: $*" >&2
	exit 1
}

function do_download_curl
{
	curl --silent --show-error --fail --location --output "$2" "$1"
}

function do_sha256sum
{
	case "$OSTYPE" in
		darwin*)
			SHA="shasum -a 256"
			;;
		*)
			SHA="sha256sum"
			;;
	esac

	$SHA < "$1" | awk '{print $1}'
}

main "$@"
