[workspace]
members = [
    "api_identity",
    "bootstore",
    "caboose-util",
    "certificates",
    "clients/bootstrap-agent-client",
    "clients/ddm-admin-client",
    "clients/dns-service-client",
    "clients/dpd-client",
    "clients/gateway-client",
    "clients/installinator-artifact-client",
    "clients/nexus-client",
    "clients/oxide-client",
    "clients/oximeter-client",
    "clients/sled-agent-client",
    "clients/wicketd-client",
    "common",
    "dev-tools/crdb-seed",
    "dev-tools/omdb",
    "dev-tools/omicron-dev",
    "dev-tools/oxlog",
    "dev-tools/reconfigurator-cli",
    "dev-tools/xtask",
    "dns-server",
    "end-to-end-tests",
    "gateway-cli",
    "gateway-test-utils",
    "gateway",
    "illumos-utils",
    "installinator-artifactd",
    "installinator-common",
    "installinator",
    "internal-dns-cli",
    "internal-dns",
    "ipcc",
    "key-manager",
    "nexus",
    "nexus-config",
    "nexus/authz-macros",
    "nexus/db-macros",
    "nexus/db-model",
    "nexus/db-queries",
    "nexus/defaults",
    "nexus/inventory",
    "nexus/macros-common",
    "nexus/metrics-producer-gc",
    "nexus/networking",
    "nexus/reconfigurator/execution",
    "nexus/reconfigurator/planning",
    "nexus/reconfigurator/preparation",
    "nexus/test-interface",
    "nexus/test-utils-macros",
    "nexus/test-utils",
    "nexus/types",
    "oximeter/collector",
    "oximeter/db",
    "oximeter/instruments",
    "oximeter/oximeter-macro-impl",
    "oximeter/oximeter",
    "oximeter/producer",
    "package",
    "passwords",
    "rpaths",
    "sled-agent",
    "sled-hardware",
    "sled-hardware/types",
    "sled-storage",
    "sp-sim",
    "test-utils",
    "tufaceous-lib",
    "tufaceous",
    "typed-rng",
    "update-common",
    "update-engine",
    "uuid-kinds",
    "wicket-common",
    "wicket-dbg",
    "wicket",
    "wicketd",
    "workspace-hack",
    "zone-network-setup",
]

default-members = [
    "bootstore",
    "caboose-util",
    "certificates",
    "clients/bootstrap-agent-client",
    "clients/ddm-admin-client",
    "clients/dns-service-client",
    "clients/dpd-client",
    "clients/gateway-client",
    "clients/installinator-artifact-client",
    "clients/nexus-client",
    "clients/oxide-client",
    "clients/oximeter-client",
    "clients/sled-agent-client",
    "clients/wicketd-client",
    "common",
    "dev-tools/crdb-seed",
    "dev-tools/omdb",
    "dev-tools/omicron-dev",
    "dev-tools/oxlog",
    "dev-tools/reconfigurator-cli",
    # Do not include xtask in the list of default members, because this causes
    # hakari to not work as well and build times to be longer.
    # See omicron#4392.
    "dns-server",
    "gateway-cli",
    "gateway-test-utils",
    "gateway",
    "illumos-utils",
    "installinator-artifactd",
    "installinator-common",
    "installinator",
    "internal-dns-cli",
    "internal-dns",
    "ipcc",
    "key-manager",
    "nexus",
    "nexus-config",
    "nexus/authz-macros",
    "nexus/macros-common",
    "nexus/metrics-producer-gc",
    "nexus/networking",
    "nexus/db-macros",
    "nexus/db-model",
    "nexus/db-queries",
    "nexus/defaults",
    "nexus/inventory",
    "nexus/reconfigurator/execution",
    "nexus/reconfigurator/planning",
    "nexus/reconfigurator/preparation",
    "nexus/types",
    "oximeter/collector",
    "oximeter/db",
    "oximeter/instruments",
    "oximeter/oximeter-macro-impl",
    "oximeter/oximeter",
    "oximeter/producer",
    "package",
    "passwords",
    "rpaths",
    "sled-agent",
    "sled-hardware",
    "sled-hardware/types",
    "sled-storage",
    "sp-sim",
    "test-utils",
    "tufaceous-lib",
    "tufaceous",
    "typed-rng",
    "update-common",
    "update-engine",
    "uuid-kinds",
    "wicket-common",
    "wicket-dbg",
    "wicket",
    "wicketd",
    "zone-network-setup",
]
resolver = "2"

[workspace.dependencies]
anyhow = "1.0"
anstyle = "1.0.6"
api_identity = { path = "api_identity" }
approx = "0.5.1"
assert_matches = "1.5.0"
assert_cmd = "2.0.14"
async-bb8-diesel = { git = "https://github.com/oxidecomputer/async-bb8-diesel", rev = "ed7ab5ef0513ba303d33efd41d3e9e381169d59b" }
async-trait = "0.1.80"
atomicwrites = "0.4.3"
authz-macros = { path = "nexus/authz-macros" }
backoff = { version = "0.4.0", features = [ "tokio" ] }
base64 = "0.22.0"
bb8 = "0.8.3"
bcs = "0.1.6"
bincode = "1.3.3"
bootstore = { path = "bootstore" }
bootstrap-agent-client = { path = "clients/bootstrap-agent-client" }
buf-list = { version = "1.0.3", features = ["tokio1"] }
byteorder = "1.5.0"
bytes = "1.6.0"
camino = { version = "1.1", features = ["serde1"] }
camino-tempfile = "1.1.1"
cancel-safe-futures = "0.1.5"
chacha20poly1305 = "0.10.1"
ciborium = "0.2.2"
cfg-if = "1.0"
chrono = { version = "0.4", features = [ "serde" ] }
clap = { version = "4.5", features = ["cargo", "derive", "env", "wrap_help"] }
colored = "2.1"
const_format = "0.2.32"
cookie = "0.18"
criterion = { version = "0.5.1", features = [ "async_tokio" ] }
crossbeam = "0.8"
crossterm = { version = "0.27.0", features = ["event-stream"] }
crucible-agent-client = { git = "https://github.com/oxidecomputer/crucible", rev = "1ef72f3c935e7dc936bf43310c04668fb60d7a20" }
crucible-pantry-client = { git = "https://github.com/oxidecomputer/crucible", rev = "1ef72f3c935e7dc936bf43310c04668fb60d7a20" }
crucible-smf = { git = "https://github.com/oxidecomputer/crucible", rev = "1ef72f3c935e7dc936bf43310c04668fb60d7a20" }
csv = "1.3.0"
curve25519-dalek = "4"
datatest-stable = "0.2.6"
display-error-chain = "0.2.0"
omicron-ddm-admin-client = { path = "clients/ddm-admin-client" }
db-macros = { path = "nexus/db-macros" }
debug-ignore = "1.0.5"
derive_more = "0.99.17"
derive-where = "1.2.7"
diesel = { version = "2.1.5", features = ["postgres", "r2d2", "chrono", "serde_json", "network-address", "uuid"] }
diesel-dtrace = { git = "https://github.com/oxidecomputer/diesel-dtrace", branch = "main" }
dns-server = { path = "dns-server" }
dns-service-client = { path = "clients/dns-service-client" }
dpd-client = { path = "clients/dpd-client" }
dropshot = { git = "https://github.com/oxidecomputer/dropshot", branch = "main", features = [ "usdt-probes" ] }
dyn-clone = "1.0.17"
either = "1.11.0"
expectorate = "1.1.0"
fatfs = "0.3.6"
filetime = "0.2.23"
flate2 = "1.0.28"
flume = "0.11.0"
foreign-types = "0.3.2"
fs-err = "2.11.0"
futures = "0.3.30"
gateway-client = { path = "clients/gateway-client" }
gateway-messages = { git = "https://github.com/oxidecomputer/management-gateway-service", rev = "2739c18e80697aa6bc235c935176d14b4d757ee9", default-features = false, features = ["std"] }
gateway-sp-comms = { git = "https://github.com/oxidecomputer/management-gateway-service", rev = "2739c18e80697aa6bc235c935176d14b4d757ee9" }
gateway-test-utils = { path = "gateway-test-utils" }
gethostname = "0.4.3"
glob = "0.3.1"
guppy = "0.17.5"
headers = "0.3.9"
heck = "0.5"
hex = "0.4.3"
hex-literal = "0.4.1"
highway = "1.1.0"
hkdf = "0.12.4"
http = "0.2.12"
httptest = "0.15.5"
hubtools = { git = "https://github.com/oxidecomputer/hubtools.git", branch = "main" }
humantime = "2.1.0"
hyper = "0.14"
hyper-rustls = "0.26.0"
hyper-staticfile = "0.9.5"
illumos-utils = { path = "illumos-utils" }
indexmap = "2.2.6"
indicatif = { version = "0.17.8", features = ["rayon"] }
installinator = { path = "installinator" }
installinator-artifactd = { path = "installinator-artifactd" }
installinator-artifact-client = { path = "clients/installinator-artifact-client" }
installinator-common = { path = "installinator-common" }
internal-dns = { path = "internal-dns" }
ipcc = { path = "ipcc" }
ipnet = "2.9"
itertools = "0.12.1"
internet-checksum = "0.2"
ipnetwork = { version = "0.20", features = ["schemars"] }
ispf = { git = "https://github.com/oxidecomputer/ispf" }
key-manager = { path = "key-manager" }
kstat-rs = "0.2.3"
libc = "0.2.153"
libfalcon = { git = "https://github.com/oxidecomputer/falcon", rev = "e69694a1f7cc9fe31fab27f321017280531fb5f7" }
libnvme = { git = "https://github.com/oxidecomputer/libnvme", rev = "6fffcc81d2c423ed2d2e6c5c2827485554c4ecbe" }
linear-map = "1.2.0"
macaddr = { version = "1.0.1", features = ["serde_std"] }
maplit = "1.0.2"
mime_guess = "2.0.4"
mockall = "0.12"
newtype_derive = "0.1.6"
mg-admin-client = { git = "https://github.com/oxidecomputer/maghemite", rev = "8207cb9c90cd7144c3f351823bfb2ae3e221ad10" }
ddm-admin-client = { git = "https://github.com/oxidecomputer/maghemite", rev = "8207cb9c90cd7144c3f351823bfb2ae3e221ad10" }
multimap = "0.10.0"
nexus-client = { path = "clients/nexus-client" }
nexus-config = { path = "nexus-config" }
nexus-db-model = { path = "nexus/db-model" }
nexus-db-queries = { path = "nexus/db-queries" }
nexus-defaults = { path = "nexus/defaults" }
nexus-inventory = { path = "nexus/inventory" }
nexus-macros-common = { path = "nexus/macros-common" }
nexus-metrics-producer-gc = { path = "nexus/metrics-producer-gc" }
nexus-networking = { path = "nexus/networking" }
nexus-reconfigurator-execution = { path = "nexus/reconfigurator/execution" }
nexus-reconfigurator-planning = { path = "nexus/reconfigurator/planning" }
nexus-reconfigurator-preparation = { path = "nexus/reconfigurator/preparation" }
omicron-certificates = { path = "certificates" }
omicron-passwords = { path = "passwords" }
omicron-workspace-hack = "0.1.0"
oxlog = { path = "dev-tools/oxlog" }
nexus-test-interface = { path = "nexus/test-interface" }
nexus-test-utils-macros = { path = "nexus/test-utils-macros" }
nexus-test-utils = { path = "nexus/test-utils" }
nexus-types = { path = "nexus/types" }
num-integer = "0.1.46"
num = { version = "0.4.2", default-features = false, features = [ "libm" ] }
omicron-common = { path = "common" }
omicron-gateway = { path = "gateway" }
omicron-nexus = { path = "nexus" }
omicron-omdb = { path = "dev-tools/omdb" }
omicron-package = { path = "package" }
omicron-rpaths = { path = "rpaths" }
omicron-sled-agent = { path = "sled-agent" }
omicron-test-utils = { path = "test-utils" }
omicron-zone-package = "0.11.0"
oxide-client = { path = "clients/oxide-client" }
oxide-vpc = { git = "https://github.com/oxidecomputer/opte", rev = "7ee353a470ea59529ee1b34729681da887aa88ce", features = [ "api", "std" ] }
once_cell = "1.19.0"
openapi-lint = { git = "https://github.com/oxidecomputer/openapi-lint", branch = "main" }
openapiv3 = "2.0.0"
# must match samael's crate!
openssl = "0.10"
openssl-sys = "0.9"
opte-ioctl = { git = "https://github.com/oxidecomputer/opte", rev = "7ee353a470ea59529ee1b34729681da887aa88ce" }
oso = "0.27"
owo-colors = "4.0.0"
oximeter = { path = "oximeter/oximeter" }
oximeter-client = { path = "clients/oximeter-client" }
oximeter-db = { path = "oximeter/db/" }
oximeter-collector = { path = "oximeter/collector" }
oximeter-instruments = { path = "oximeter/instruments" }
oximeter-macro-impl = { path = "oximeter/oximeter-macro-impl" }
oximeter-producer = { path = "oximeter/producer" }
p256 = "0.13"
parse-display = "0.9.0"
partial-io = { version = "0.5.4", features = ["proptest1", "tokio1"] }
parse-size = "1.0.0"
paste = "1.0.14"
percent-encoding = "2.3.1"
peg = "0.8.2"
pem = "3.0"
petgraph = "0.6.4"
postgres-protocol = "0.6.6"
predicates = "3.1.0"
pretty_assertions = "1.4.0"
pretty-hex = "0.4.1"
prettyplease = { version = "0.2.19", features = ["verbatim"] }
proc-macro2 = "1.0"
progenitor = { git = "https://github.com/oxidecomputer/progenitor", branch = "main" }
progenitor-client = { git = "https://github.com/oxidecomputer/progenitor", branch = "main" }
bhyve_api = { git = "https://github.com/oxidecomputer/propolis", rev = "dd788a311a382b09ce1d3e35f7777b378e09fdf7" }
propolis-client = { git = "https://github.com/oxidecomputer/propolis", rev = "dd788a311a382b09ce1d3e35f7777b378e09fdf7" }
propolis-mock-server = { git = "https://github.com/oxidecomputer/propolis", rev = "dd788a311a382b09ce1d3e35f7777b378e09fdf7" }
proptest = "1.4.0"
quote = "1.0"
rand = "0.8.5"
rand_core = "0.6.4"
rand_seeder = "0.2.3"
ratatui = "0.26.2"
rayon = "1.10"
rcgen = "0.12.1"
reedline = "0.31.0"
ref-cast = "1.0"
regex = "1.10.4"
regress = "0.9.1"
reqwest = { version = "0.11", default-features = false }
ring = "0.17.8"
rpassword = "7.3.1"
rstest = "0.19.0"
rustfmt-wrapper = "0.2"
rustls = "0.22.2"
rustls-pemfile = "2.1.2"
rustyline = "14.0.0"
samael = { version = "0.0.15", features = ["xmlsec"] }
schemars = "0.8.16"
secrecy = "0.8.0"
semver = { version = "1.0.22", features = ["std", "serde"] }
serde = { version = "1.0", default-features = false, features = [ "derive", "rc" ] }
serde_human_bytes = { git = "http://github.com/oxidecomputer/serde_human_bytes", branch = "main" }
serde_json = "1.0.116"
serde_path_to_error = "0.1.16"
serde_tokenstream = "0.2"
serde_urlencoded = "0.7.1"
serde_with = "3.7.0"
sha2 = "0.10.8"
sha3 = "0.10.8"
shell-words = "1.1.0"
signal-hook = "0.3"
signal-hook-tokio = { version = "0.3", features = [ "futures-v0_3" ] }
sigpipe = "0.1.3"
similar-asserts = "1.5.0"
sled = "0.34"
sled-agent-client = { path = "clients/sled-agent-client" }
sled-hardware = { path = "sled-hardware" }
sled-hardware-types = { path = "sled-hardware/types" }
sled-storage = { path = "sled-storage" }
slog = { version = "2.7", features = [ "dynamic-keys", "max_level_trace", "release_max_level_debug" ] }
slog-async = "2.8"
slog-bunyan = "2.5"
slog-dtrace = "0.3"
slog-envlogger = "2.2"
slog-error-chain = { git = "https://github.com/oxidecomputer/slog-error-chain", branch = "main", features = ["derive"] }
slog-term = "2.9.1"
smf = "0.2"
socket2 = { version = "0.5", features = ["all"] }
sp-sim = { path = "sp-sim" }
sprockets-common = { git = "http://github.com/oxidecomputer/sprockets", rev = "77df31efa5619d0767ffc837ef7468101608aee9" }
sprockets-host = { git = "http://github.com/oxidecomputer/sprockets", rev = "77df31efa5619d0767ffc837ef7468101608aee9" }
sprockets-rot = { git = "http://github.com/oxidecomputer/sprockets", rev = "77df31efa5619d0767ffc837ef7468101608aee9" }
sqlformat = "0.2.3"
sqlparser = { version = "0.45.0", features = [ "visitor" ] }
static_assertions = "1.1.0"
# Please do not change the Steno version to a Git dependency.  It makes it
# harder than expected to make breaking changes (even if you specify a specific
# SHA).  Cut a new Steno release instead.  See omicron#2117.
steno = "0.4.0"
strum = { version = "0.26", features = [ "derive" ] }
subprocess = "0.2.9"
supports-color = "3.0.0"
swrite = "0.1.0"
libsw = { version = "3.3.1", features = ["tokio"] }
syn = { version = "2.0" }
tabled = "0.15.0"
tar = "0.4"
tempfile = "3.10"
term = "0.7"
termios = "0.3"
textwrap = "0.16.1"
test-strategy = "0.3.1"
thiserror = "1.0"
tofino = { git = "http://github.com/oxidecomputer/tofino", branch = "main" }
tokio = "1.37.0"
tokio-postgres = { version = "0.7", features = [ "with-chrono-0_4", "with-uuid-1" ] }
tokio-stream = "0.1.15"
tokio-tungstenite = "0.20"
tokio-util = { version = "0.7.10", features = ["io", "io-util"] }
toml = "0.8.12"
toml_edit = "0.22.9"
tough = { version = "0.17.1", features = [ "http" ] }
trust-dns-client = "0.22"
trust-dns-proto = "0.22"
trust-dns-resolver = "0.22"
trust-dns-server = "0.22"
trybuild = "1.0.91"
tufaceous = { path = "tufaceous" }
tufaceous-lib = { path = "tufaceous-lib" }
tui-tree-widget = "0.19.0"
typed-rng = { path = "typed-rng" }
unicode-width = "0.1.11"
update-common = { path = "update-common" }
update-engine = { path = "update-engine" }
usdt = "0.5.0"
uuid = { version = "1.8.0", features = ["serde", "v4"] }
walkdir = "2.5"
whoami = "1.5"
wicket = { path = "wicket" }
wicket-common = { path = "wicket-common" }
wicketd-client = { path = "clients/wicketd-client" }
zeroize = { version = "1.7.0", features = ["zeroize_derive", "std"] }
zip = { version = "0.6.6", default-features = false, features = ["deflate","bzip2"] }
zone = { version = "0.3", default-features = false, features = ["async", "sync"] }

# newtype-uuid is set to default-features = false because we don't want to
# depend on std in omicron-uuid-kinds (in case a no-std library wants to access
# the kinds). However, uses of omicron-uuid-kinds _within omicron_ will have
# std and the other features enabled because they'll refer to it via
# omicron-uuid-kinds.workspace = true.
newtype-uuid = { version = "1.1.0", default-features = false }
omicron-uuid-kinds = { path = "uuid-kinds", features = ["serde", "schemars08", "uuid-v4"] }

# NOTE: The test profile inherits from the dev profile, so settings under
# profile.dev get inherited. AVOID setting anything under profile.test: that
# will cause dev and test builds to diverge, which will cause more Cargo build
# cache misses.

[profile.dev]
# Note: This used to be panic = "abort" earlier, but that caused a lot of
# duplicate dependency builds. Letting panic be "unwind" causes dependencies
# across `cargo test` and `cargo run` to be unified. See omicron#4392.
panic = "unwind"

# See https://github.com/oxidecomputer/omicron/issues/4009 for some background context here.
# By reducing the debug level (though keeping enough to have meaningful
# backtraces), we reduce incremental build time and binary size significantly.
debug = "line-tables-only"

[profile.dev.build-override]
# Setting this to line-tables-only results in a large improvement in build
# times, because it allows target and host dependencies to be unified.
debug = "line-tables-only"

# `bindgen` is used by `samael`'s build script; building it with optimizations
# makes that build script run ~5x faster, more than offsetting the additional
# build time added to `bindgen` itself.
[profile.dev.package.bindgen]
opt-level = 3

# `lalrpop` is used by `polar-core`'s build script; building it with
# optimizations makes that build script run ~20x faster, more than offsetting
# the additional build time added to `lalrpop` itself.
[profile.dev.package.lalrpop]
opt-level = 3

# `polar-core` is exercised heavily during the test suite and it's worthwhile to
# have it built with optimizations.
[profile.dev.package.polar-core]
opt-level = 3

# Password hashing is expensive by construction.  Build the hashing libraries
# with optimizations to significantly speed up tests.
[profile.dev.package.argon2]
opt-level = 3
[profile.dev.package.rust-argon2]
opt-level = 3

[profile.release]
panic = "abort"

# proptest based test generation and shrinking is expensive. Let's optimize it.
[profile.dev.package.proptest]
opt-level = 3

[profile.dev.package.bootstore]
opt-level = 3

# Crypto stuff always needs optimizations
[profile.dev.package.sha3]
opt-level = 3
[profile.dev.package.sha2]
opt-level = 3
[profile.dev.package.hkdf]
opt-level = 3
[profile.dev.package.chacha20poly1305]
opt-level = 3
[profile.dev.package.chacha20]
opt-level = 3
[profile.dev.package.vsss-rs]
opt-level = 3
[profile.dev.package.curve25519-dalek]
opt-level = 3
[profile.dev.package.aead]
opt-level = 3
[profile.dev.package.aes]
opt-level = 3
[profile.dev.package.aes-gcm]
opt-level = 3
[profile.dev.package.bcrypt-pbkdf]
opt-level = 3
[profile.dev.package.blake2]
opt-level = 3
[profile.dev.package.blake2b_simd]
opt-level = 3
[profile.dev.package.block-buffer]
opt-level = 3
[profile.dev.package.block-padding]
opt-level = 3
[profile.dev.package.blowfish]
opt-level = 3
[profile.dev.package.constant_time_eq]
opt-level = 3
[profile.dev.package.crypto-bigint]
opt-level = 3
[profile.dev.package.crypto-common]
opt-level = 3
[profile.dev.package.ctr]
opt-level = 3
[profile.dev.package.cbc]
opt-level = 3
[profile.dev.package.digest]
opt-level = 3
[profile.dev.package.ed25519]
opt-level = 3
[profile.dev.package.ed25519-dalek]
opt-level = 3
[profile.dev.package.elliptic-curve]
opt-level = 3
[profile.dev.package.generic-array]
opt-level = 3
[profile.dev.package.getrandom]
opt-level = 3
[profile.dev.package.hmac]
opt-level = 3
[profile.dev.package.lpc55_sign]
opt-level = 3
[profile.dev.package.md5]
opt-level = 3
[profile.dev.package.md-5]
opt-level = 3
[profile.dev.package.num-bigint]
opt-level = 3
[profile.dev.package.num-bigint-dig]
opt-level = 3
[profile.dev.package.rand]
opt-level = 3
[profile.dev.package.rand_chacha]
opt-level = 3
[profile.dev.package.rand_core]
opt-level = 3
[profile.dev.package.rand_hc]
opt-level = 3
[profile.dev.package.rand_xorshift]
opt-level = 3
[profile.dev.package.rsa]
opt-level = 3
[profile.dev.package.salty]
opt-level = 3
[profile.dev.package.signature]
opt-level = 3
[profile.dev.package.subtle]
opt-level = 3
[profile.dev.package.tiny-keccak]
opt-level = 3
[profile.dev.package.uuid]
opt-level = 3
[profile.dev.package.cipher]
opt-level = 3
[profile.dev.package.cpufeatures]
opt-level = 3
[profile.dev.package.poly1305]
opt-level = 3
[profile.dev.package.inout]
opt-level = 3
[profile.dev.package.keccak]
opt-level = 3


#
# It's common during development to use a local copy of various complex
# dependencies.  If you want to use those, uncomment one of these blocks.
#
#[patch."https://github.com/oxidecomputer/dropshot"]
#dropshot = { path = "../dropshot/dropshot" }
#[patch.crates-io]
#steno = { path = "../steno" }
#[patch."https://github.com/oxidecomputer/propolis"]
#propolis-client = { path = "../propolis/lib/propolis-client" }
#propolis-mock-server = { path = "../propolis/bin/mock-server" }
#[patch."https://github.com/oxidecomputer/crucible"]
#crucible-agent-client = { path = "../crucible/agent-client" }
#crucible-pantry-client = { path = "../crucible/pantry-client" }
#crucible-smf = { path = "../crucible/smf" }
#[patch.crates-io]
#diesel = { path = "../../diesel/diesel" }
#[patch."https://github.com/oxidecomputer/diesel-dtrace"]
#diesel-dtrace = { path = "../diesel-dtrace" }

#
# Local client generation during development.
#
#[patch."https://github.com/oxidecomputer/progenitor"]
#progenitor = { path = "../progenitor/progenitor" }
#progenitor-client = { path = "../progenitor/progenitor-client" }
#[patch."https://github.com/oxidecomputer/typify"]
#typify = { path = "../typify/typify" }

#
# We maintain a fork of pq-sys to address upstream issues.  See the
# README.oxide.md in the "oxide" branch of our fork for details.
#
[patch.crates-io.pq-sys]
git = 'https://github.com/oxidecomputer/pq-sys'
branch = "oxide/omicron"

# Using the workspace-hack via this patch directive means that it only applies
# while building within this workspace. If another workspace imports a crate
# from here via a git dependency, it will not have the workspace-hack applied
# to it.
[patch.crates-io.omicron-workspace-hack]
path = "workspace-hack"

# Several crates such as crucible and propolis have have a Git dependency on
# this repo. Omicron itself depends on these crates, which can lead to two
# copies of these crates in the dependency graph. (As a Git dependency, and as
# a path dependency.) The goal of omicron-uuid-kinds is to provide a unified
# registry of UUID kinds. Two copies of the same kinds floating around is
# unnecessary and painful.
#
# This directive ensures that whenever we see omicron-uuid-kinds as a Git
# dependency, we'll use the path dependency version of the crate instead.
#
# See also: uuid-kinds/README.adoc.
[patch."https://github.com/oxidecomputer/omicron"]
omicron-uuid-kinds = { path = "uuid-kinds" }
omicron-common = { path = "common" }

[patch.crates-io.zone]
git = 'https://github.com/oxidecomputer/zone'
branch = 'state-derive-eq-hash'
