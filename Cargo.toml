[workspace]
members = [
    "api_identity",
    "bootstore",
    "certificates",
    "clickhouse-admin",
    "clickhouse-admin/api",
    "clickhouse-admin/test-utils",
    "clients/bootstrap-agent-client",
    "clients/clickhouse-admin-keeper-client",
    "clients/clickhouse-admin-server-client",
    "clients/clickhouse-admin-single-client",
    "clients/cockroach-admin-client",
    "clients/ddm-admin-client",
    "clients/dns-service-client",
    "clients/gateway-client",
    "clients/installinator-client",
    "clients/nexus-client",
    "clients/ntp-admin-client",
    "clients/oxide-client",
    "clients/oximeter-client",
    "clients/repo-depot-client",
    "clients/sled-agent-client",
    "clients/wicketd-client",
    "cockroach-admin",
    "cockroach-admin/api",
    "cockroach-admin/types",
    "cockroach-metrics",
    "common",
    "dev-tools/cert-dev",
    "dev-tools/clickana",
    "dev-tools/clickhouse-cluster-dev",
    "dev-tools/ch-dev",
    "dev-tools/common",
    "dev-tools/crdb-seed",
    "dev-tools/db-dev",
    "dev-tools/downloader",
    "dev-tools/ls-apis",
    "dev-tools/mgs-dev",
    "dev-tools/omdb",
    "dev-tools/omicron-dev",
    "dev-tools/omicron-dev-lib",
    "dev-tools/openapi-manager",
    "dev-tools/openapi-manager/types",
    "dev-tools/oxlog",
    "dev-tools/pins",
    "dev-tools/reconfigurator-cli",
    "dev-tools/reconfigurator-exec-unsafe",
    "dev-tools/reconfigurator-sp-updater",
    "dev-tools/releng",
    "dev-tools/repl-utils",
    "dev-tools/repo-depot-standalone",
    "dev-tools/xtask",
    "dns-server",
    "dns-server-api",
    "end-to-end-tests",
    "ereport/types",
    "gateway",
    "gateway-api",
    "gateway-cli",
    "gateway-test-utils",
    "gateway-types",
    "id-map",
    "illumos-utils",
    "installinator-api",
    "installinator-common",
    "installinator",
    "internal-dns/cli",
    "internal-dns/resolver",
    "internal-dns/types",
    "ipcc",
    "key-manager",
    "live-tests",
    "live-tests/macros",
    "nexus",
    "nexus-config",
    "nexus-sled-agent-shared",
    "nexus/authz-macros",
    "nexus/auth",
    "nexus/background-task-interface",
    "nexus/db-errors",
    "nexus/db-fixed-data",
    "nexus/db-lookup",
    "nexus/db-macros",
    "nexus/db-model",
    "nexus/db-queries",
    "nexus/db-schema",
    "nexus/defaults",
    "nexus/external-api",
    "nexus/internal-api",
    "nexus/inventory",
    "nexus/macros-common",
    "nexus/metrics-producer-gc",
    "nexus/mgs-updates",
    "nexus/networking",
    "nexus/reconfigurator/blippy",
    "nexus/reconfigurator/cli-integration-tests",
    "nexus/reconfigurator/execution",
    "nexus/reconfigurator/planning",
    "nexus/reconfigurator/preparation",
    "nexus/reconfigurator/rendezvous",
    "nexus/reconfigurator/simulation",
    "nexus/saga-recovery",
    "nexus/test-interface",
    "nexus/test-utils-macros",
    "nexus/test-utils",
    "nexus/types",
    "ntp-admin",
    "ntp-admin/api",
    "ntp-admin/types",
    "oximeter/api",
    "oximeter/collector",
    "oximeter/db",
    "oximeter/instruments",
    "oximeter/oximeter-macro-impl",
    "oximeter/oximeter",
    "oximeter/oxql-types",
    "oximeter/producer",
    "oximeter/schema",
    "oximeter/test-utils",
    "oximeter/timeseries-macro",
    "oximeter/types",
    "package",
    "parallel-task-set",
    "passwords",
    "range-requests",
    "rpaths",
    "sled-agent",
    "sled-agent/api",
    "sled-agent/bootstrap-agent-api",
    "sled-agent/config-reconciler",
    "sled-agent/repo-depot-api",
    "sled-agent/types",
    "sled-agent/zone-images",
    "sled-agent/zone-images-examples",
    "sled-diagnostics",
    "sled-hardware",
    "sled-hardware/types",
    "sled-storage",
    "sp-sim",
    "test-utils",
    "trust-quorum",
    "trust-quorum/gfss",
    "typed-rng",
    "update-common",
    "update-engine",
    "uuid-kinds",
    "wicket-common",
    "wicket-dbg",
    "wicket",
    "wicketd",
    "wicketd-api",
    "workspace-hack",
    "zone-setup",
]

default-members = [
    "api_identity",
    "bootstore",
    "certificates",
    "clickhouse-admin",
    "clickhouse-admin/api",
    "clickhouse-admin/types",
    "clickhouse-admin/test-utils",
    "clients/bootstrap-agent-client",
    "clients/clickhouse-admin-keeper-client",
    "clients/clickhouse-admin-server-client",
    "clients/clickhouse-admin-single-client",
    "clients/cockroach-admin-client",
    "clients/ddm-admin-client",
    "clients/dns-service-client",
    "clients/gateway-client",
    "clients/installinator-client",
    "clients/nexus-client",
    "clients/ntp-admin-client",
    "clients/oxide-client",
    "clients/oximeter-client",
    "clients/repo-depot-client",
    "clients/sled-agent-client",
    "clients/wicketd-client",
    "cockroach-admin",
    "cockroach-admin/api",
    "cockroach-admin/types",
    "cockroach-metrics",
    "common",
    "dev-tools/cert-dev",
    "dev-tools/clickana",
    "dev-tools/clickhouse-cluster-dev",
    "dev-tools/ch-dev",
    "dev-tools/common",
    "dev-tools/crdb-seed",
    "dev-tools/db-dev",
    "dev-tools/downloader",
    "dev-tools/ls-apis",
    "dev-tools/mgs-dev",
    "dev-tools/omdb",
    "dev-tools/omicron-dev",
    "dev-tools/omicron-dev-lib",
    "dev-tools/openapi-manager",
    "dev-tools/openapi-manager/types",
    "dev-tools/oxlog",
    "dev-tools/pins",
    "dev-tools/reconfigurator-cli",
    "dev-tools/reconfigurator-exec-unsafe",
    "dev-tools/reconfigurator-sp-updater",
    "dev-tools/releng",
    "dev-tools/repl-utils",
    "dev-tools/repo-depot-standalone",
    # Do not include xtask in the list of default members, because this causes
    # hakari to not work as well and build times to be longer.
    # See omicron#4392.
    "dns-server",
    "dns-server-api",
    "end-to-end-tests",
    "ereport/types",
    "gateway",
    "gateway-api",
    "gateway-cli",
    "gateway-test-utils",
    "gateway-types",
    "id-map",
    "illumos-utils",
    "installinator-api",
    "installinator-common",
    "installinator",
    "internal-dns/cli",
    "internal-dns/resolver",
    "internal-dns/types",
    "ipcc",
    "key-manager",
    "live-tests",
    "live-tests/macros",
    "nexus",
    "nexus-config",
    "nexus-sled-agent-shared",
    "nexus/authz-macros",
    "nexus/auth",
    "nexus/background-task-interface",
    "nexus/db-errors",
    "nexus/db-fixed-data",
    "nexus/db-lookup",
    "nexus/db-macros",
    "nexus/db-model",
    "nexus/db-queries",
    "nexus/db-schema",
    "nexus/defaults",
    "nexus/external-api",
    "nexus/internal-api",
    "nexus/inventory",
    "nexus/macros-common",
    "nexus/metrics-producer-gc",
    "nexus/mgs-updates",
    "nexus/networking",
    "nexus/reconfigurator/blippy",
    "nexus/reconfigurator/cli-integration-tests",
    "nexus/reconfigurator/execution",
    "nexus/reconfigurator/planning",
    "nexus/reconfigurator/preparation",
    "nexus/reconfigurator/rendezvous",
    "nexus/reconfigurator/simulation",
    "nexus/saga-recovery",
    "nexus/test-interface",
    "nexus/test-utils-macros",
    "nexus/test-utils",
    "nexus/types",
    "ntp-admin",
    "ntp-admin/api",
    "ntp-admin/types",
    "oximeter/api",
    "oximeter/collector",
    "oximeter/db",
    "oximeter/instruments",
    "oximeter/oximeter-macro-impl",
    "oximeter/oximeter",
    "oximeter/oxql-types",
    "oximeter/producer",
    "oximeter/schema",
    "oximeter/test-utils",
    "oximeter/timeseries-macro",
    "oximeter/types",
    "package",
    "parallel-task-set",
    "passwords",
    "range-requests",
    "rpaths",
    "sled-agent",
    "sled-agent/api",
    "sled-agent/bootstrap-agent-api",
    "sled-agent/config-reconciler",
    "sled-agent/repo-depot-api",
    "sled-agent/types",
    "sled-agent/zone-images",
    "sled-agent/zone-images-examples",
    "sled-diagnostics",
    "sled-hardware",
    "sled-hardware/types",
    "sled-storage",
    "sp-sim",
    "trust-quorum",
    "trust-quorum/gfss",
    "test-utils",
    "typed-rng",
    "update-common",
    "update-engine",
    "uuid-kinds",
    "wicket-common",
    "wicket-dbg",
    "wicket",
    "wicketd",
    "wicketd-api",
    "workspace-hack",
    "zone-setup",
]
resolver = "3"

#
# Tree-wide lint configuration.
# https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-lints-section
#
# For a list of Clippy lints, see
# https://rust-lang.github.io/rust-clippy/master.
#
[workspace.lints.clippy]
# Clippy's style nits are useful, but not worth keeping in CI.
style = { level = "allow", priority = -1 }
# This lint would be useful to address over time, but has too many hits as of
# 2025-05-15.
result_large_err = "allow"
# But continue to warn on anything in the "disallowed_" namespace.
disallowed_macros = "warn"
disallowed_methods = "warn"
disallowed_names = "warn"
disallowed_script_idents = "warn"
disallowed_types = "warn"
# Warn on some more style lints that are relatively stable and make sense.
iter_cloned_collect = "warn"
iter_next_slice = "warn"
iter_nth = "warn"
iter_nth_zero = "warn"
iter_skip_next = "warn"
len_zero = "warn"
redundant_field_names = "warn"
# `declare_interior_mutable_const` is classified as a style lint, but it can
# identify real bugs (e.g., declarying a `const Atomic` and using it like
# a `static Atomic`). However, it is also subject to false positives (e.g.,
# idiomatically declaring a static array of atomics uses `const Atomic`). We
# warn on this to catch the former, and expect any uses of the latter to allow
# this locally.
declare_interior_mutable_const = "warn"
# Also warn on casts, preferring explicit conversions instead.
#
# We'd like to warn on lossy casts in the future, but lossless casts are the
# easiest ones to convert over.
cast_lossless = "warn"

[workspace.dependencies]
anyhow = "1.0"
anstyle = "1.0.11"
api_identity = { path = "api_identity" }
approx = "0.5.1"
assert_matches = "1.5.0"
assert_cmd = "2.0.17"
async-bb8-diesel = "0.2"
async-trait = "0.1.88"
atomicwrites = "0.4.4"
authz-macros = { path = "nexus/authz-macros" }
backoff = { version = "0.4.0", features = [ "tokio" ] }
base64 = "0.22.1"
bcs = "0.1.6"
bincode = "1.3.3"
bootstore = { path = "bootstore" }
bootstrap-agent-api = { path = "sled-agent/bootstrap-agent-api" }
bootstrap-agent-client = { path = "clients/bootstrap-agent-client" }
buf-list = { version = "1.0.3", features = ["tokio1"] }
byteorder = "1.5.0"
bytes = "1.10.1"
camino = { version = "1.1", features = ["serde1"] }
camino-tempfile = "1.4.1"
camino-tempfile-ext = { version = "0.3.2", features = ["assert-color"] }
cancel-safe-futures = "0.1.5"
cargo_metadata = "0.20.0"
chacha20poly1305 = "0.10.1"
cfg-if = "1.0"
chrono = { version = "0.4", features = [ "serde" ] }
chrono-tz = { version = "0.10.3", features = [ "serde" ] }
ciborium = "0.2.2"
clap = { version = "4.5", features = ["cargo", "derive", "env", "wrap_help"] }
clickana = { path = "dev-tools/clickana" }
clickhouse-admin-api = { path = "clickhouse-admin/api" }
clickhouse-admin-keeper-client = { path = "clients/clickhouse-admin-keeper-client" }
clickhouse-admin-server-client = { path = "clients/clickhouse-admin-server-client" }
clickhouse-admin-single-client = { path = "clients/clickhouse-admin-single-client" }
clickhouse-admin-types = { path = "clickhouse-admin/types" }
clickhouse-admin-test-utils = { path = "clickhouse-admin/test-utils" }
clickward = { git = "https://github.com/oxidecomputer/clickward", rev = "e3d9a1c35cf3cd04f9cb2e997b0ad88324d30737" }
cockroach-admin-api = { path = "cockroach-admin/api" }
cockroach-admin-client = { path = "clients/cockroach-admin-client" }
cockroach-admin-types = { path = "cockroach-admin/types" }
colored = "2.1"
const_format = "0.2.34"
cookie = "0.18"
criterion = { version = "0.6.0", features = [ "async_tokio" ] }
crossbeam = "0.8"
crossterm = { version = "0.28.1", features = ["event-stream"] }
# NOTE: if you change the pinned revision of the `crucible` dependencies, you
# must also update the references in package-manifest.toml to match the new
# revision.
crucible-agent-client = { git = "https://github.com/oxidecomputer/crucible", rev = "e164393a88e7b62598897dc4f53315f083e25333" }
crucible-pantry-client = { git = "https://github.com/oxidecomputer/crucible", rev = "e164393a88e7b62598897dc4f53315f083e25333" }
crucible-smf = { git = "https://github.com/oxidecomputer/crucible", rev = "e164393a88e7b62598897dc4f53315f083e25333" }
crucible-common = { git = "https://github.com/oxidecomputer/crucible", rev = "e164393a88e7b62598897dc4f53315f083e25333" }
# NOTE: See above!
csv = "1.3.1"
curve25519-dalek = "4"
daft = { version = "0.1.4", features = ["derive", "newtype-uuid1", "oxnet01", "uuid1"] }
display-error-chain = "0.2.2"
omicron-ddm-admin-client = { path = "clients/ddm-admin-client" }
datatest-stable = "0.3.2"
db-macros = { path = "nexus/db-macros" }
debug-ignore = "1.0.5"
derive_more = "0.99.20"
derive-where = "1.5.0"
dev-tools-common = { path = "dev-tools/common" }
# Having the i-implement-... feature here makes diesel go away from the workspace-hack
diesel = { version = "2.2.11", features = ["i-implement-a-third-party-backend-and-opt-into-breaking-changes", "postgres", "r2d2", "chrono", "serde_json", "network-address", "uuid"] }
diesel-dtrace = "0.4.2"
digest = "0.10.7"
dns-server = { path = "dns-server" }
dns-server-api = { path = "dns-server-api" }
dns-service-client = { path = "clients/dns-service-client" }
dpd-client = { git = "https://github.com/oxidecomputer/dendrite" }
dropshot = { version = "0.16.2", features = [ "usdt-probes" ] }
dyn-clone = "1.0.19"
either = "1.15.0"
ereport-types = { path = "ereport/types" }
expectorate = "1.2.0"
fatfs = "0.3.6"
filetime = "0.2.25"
flate2 = "1.1.2"
float-ord = "0.3.2"
flume = "0.11.1"
foreign-types = "0.3.2"
fs-err = "3.1.1"
futures = "0.3.31"
gateway-api = { path = "gateway-api" }
gateway-client = { path = "clients/gateway-client" }
# If you're updating the pinned revision of these MGS dependencies, you should
# also update the git commit revision for the `omicron-faux-mgs` package in
# `package-manifest.toml`. Failure to do so won't cause incorrect behavior, but
# does mean the `faux-mgs` shipped with the switch zone would be out of date
# relative to the MGS proper shipped in that same switch zone. (Generally this
# is "fine", because SP/MGS communication maintains forwards and backwards
# compatibility, but will mean that faux-mgs might be missing new
# functionality.)
#
gateway-ereport-messages = { git = "https://github.com/oxidecomputer/management-gateway-service", rev = "77e316c812aa057b9714d0d99c4a7bdd36d45be2", default-features = false, features = ["debug-impls"] }
gateway-messages = { git = "https://github.com/oxidecomputer/management-gateway-service", rev = "77e316c812aa057b9714d0d99c4a7bdd36d45be2", default-features = false, features = ["std"] }
gateway-sp-comms = { git = "https://github.com/oxidecomputer/management-gateway-service", rev = "77e316c812aa057b9714d0d99c4a7bdd36d45be2" }
gateway-test-utils = { path = "gateway-test-utils" }
gateway-types = { path = "gateway-types" }
gethostname = "0.5.0"
gfss = { path = "trust-quorum/gfss" }
glob = "0.3.2"
guppy = "0.17.19"
headers = "0.4.1"
heck = "0.5"
hex = "0.4.3"
hex-literal = "0.4.1"
hickory-client = "0.25.2"
hickory-proto = "0.25.2"
hickory-resolver = "0.25.2"
hickory-server = "0.25.2"
highway = "1.3.0"
hkdf = "0.12.4"
hmac = "0.12.1"
http = "1.3.1"
http-body = "1.0.1"
http-body-util = "0.1.3"
http-range = "0.1.5"
httpmock = "0.8.0-alpha.1"
httptest = "0.16.3"
hubtools = { git = "https://github.com/oxidecomputer/hubtools.git", branch = "main" }
humantime = "2.2.0"
hyper = "1.6.0"
hyper-util = "0.1.14"
hyper-rustls = "0.27.7"
hyper-staticfile = "0.10.1"
iddqd = { version = "0.3.8", features = ["daft", "serde", "schemars08"] }
id-map = { path = "id-map" }
illumos-utils = { path = "illumos-utils" }
iana-time-zone = "0.1.63"
indent_write = "2.2.0"
indexmap = "2.10.0"
indicatif = { version = "0.17.11", features = ["rayon"] }
indoc = "2.0.6"
installinator = { path = "installinator" }
installinator-api = { path = "installinator-api" }
installinator-client = { path = "clients/installinator-client" }
installinator-common = { path = "installinator-common" }
internal-dns-resolver = { path = "internal-dns/resolver" }
internal-dns-types = { path = "internal-dns/types" }
ipcc = { path = "ipcc" }
ipnet = "2.9"
itertools = "0.14.0"
internet-checksum = "0.2"
ipnetwork = { version = "0.21", features = ["schemars", "serde"] }
ispf = { git = "https://github.com/oxidecomputer/ispf" }
jiff = "0.2.15"
key-manager = { path = "key-manager" }
kstat-rs = "0.2.4"
libc = "0.2.174"
libipcc = { git = "https://github.com/oxidecomputer/ipcc-rs", rev = "524eb8f125003dff50b9703900c6b323f00f9e1b" }
libfalcon = { git = "https://github.com/oxidecomputer/falcon", branch = "main" }
libnvme = { git = "https://github.com/oxidecomputer/libnvme", rev = "dd5bb221d327a1bc9287961718c3c10d6bd37da0" }
linear-map = "1.2.0"
live-tests-macros = { path = "live-tests/macros" }
lldpd_client = { git = "https://github.com/oxidecomputer/lldp", package = "lldpd-client" }
lldp_protocol = { git = "https://github.com/oxidecomputer/lldp", package = "protocol" }
macaddr = { version = "1.0.1", features = ["serde_std"] }
maplit = "1.0.2"
newtype_derive = "0.1.6"
ntp-admin-api = { path = "ntp-admin/api" }
ntp-admin-client = { path = "clients/ntp-admin-client" }
ntp-admin-types = { path = "ntp-admin/types" }
mg-admin-client = { git = "https://github.com/oxidecomputer/maghemite", rev = "fa5f15cdcd5864161a929e2ec01534f70dfba216" }
ddm-admin-client = { git = "https://github.com/oxidecomputer/maghemite", rev = "fa5f15cdcd5864161a929e2ec01534f70dfba216" }
multimap = "0.10.1"
nexus-auth = { path = "nexus/auth" }
nexus-background-task-interface = { path = "nexus/background-task-interface" }
nexus-client = { path = "clients/nexus-client" }
nexus-config = { path = "nexus-config" }
nexus-db-errors = { path = "nexus/db-errors" }
nexus-db-fixed-data = { path = "nexus/db-fixed-data" }
nexus-db-lookup = { path = "nexus/db-lookup" }
nexus-db-model = { path = "nexus/db-model" }
nexus-db-queries = { path = "nexus/db-queries" }
nexus-db-schema = { path = "nexus/db-schema" }
nexus-defaults = { path = "nexus/defaults" }
nexus-external-api = { path = "nexus/external-api" }
nexus-inventory = { path = "nexus/inventory" }
nexus-internal-api = { path = "nexus/internal-api" }
nexus-macros-common = { path = "nexus/macros-common" }
nexus-metrics-producer-gc = { path = "nexus/metrics-producer-gc" }
nexus-mgs-updates = { path = "nexus/mgs-updates" }
nexus-networking = { path = "nexus/networking" }
nexus-reconfigurator-blippy = { path = "nexus/reconfigurator/blippy" }
nexus-reconfigurator-execution = { path = "nexus/reconfigurator/execution" }
nexus-reconfigurator-planning = { path = "nexus/reconfigurator/planning" }
nexus-reconfigurator-preparation = { path = "nexus/reconfigurator/preparation" }
nexus-reconfigurator-rendezvous = { path = "nexus/reconfigurator/rendezvous" }
nexus-reconfigurator-simulation = { path = "nexus/reconfigurator/simulation" }
nexus-saga-recovery = { path = "nexus/saga-recovery" }
nexus-sled-agent-shared = { path = "nexus-sled-agent-shared" }
nexus-test-interface = { path = "nexus/test-interface" }
nexus-test-utils-macros = { path = "nexus/test-utils-macros" }
nexus-test-utils = { path = "nexus/test-utils" }
nexus-types = { path = "nexus/types" }
nix = { version = "0.30", features = ["net"] }
nom = "7.1.3"
num-integer = "0.1.46"
num = { version = "0.4.3", default-features = false, features = [ "libm" ] }
omicron-clickhouse-admin = { path = "clickhouse-admin" }
omicron-certificates = { path = "certificates" }
omicron-cockroach-admin = { path = "cockroach-admin" }
omicron-cockroach-metrics = { path = "cockroach-metrics" }
omicron-common = { path = "common" }
omicron-dev-lib = { path = "dev-tools/omicron-dev-lib" }
omicron-gateway = { path = "gateway" }
omicron-nexus = { path = "nexus" }
omicron-ntp-admin = { path = "ntp-admin" }
omicron-omdb = { path = "dev-tools/omdb" }
omicron-package = { path = "package" }
omicron-passwords = { path = "passwords" }
omicron-pins = { path = "dev-tools/pins" }
omicron-repl-utils = { path = "dev-tools/repl-utils" }
omicron-rpaths = { path = "rpaths" }
omicron-sled-agent = { path = "sled-agent" }
omicron-test-utils = { path = "test-utils" }
omicron-workspace-hack = "0.1.0"
omicron-zone-package = "0.12.2"
oxide-client = { path = "clients/oxide-client" }
oxide-tokio-rt = "0.1.2"
oxide-vpc = { git = "https://github.com/oxidecomputer/opte", rev = "2d095de2258aa0653d669b72c741f26e608c81a6", features = [ "api", "std" ] }
oxlog = { path = "dev-tools/oxlog" }
oxnet = "0.1.2"
once_cell = "1.21.3"
openapi-lint = { git = "https://github.com/oxidecomputer/openapi-lint", branch = "main" }
openapi-manager-types = { path = "dev-tools/openapi-manager/types" }
openapiv3 = "2.2.0"
# must match samael's crate!
openssl = "0.10"
openssl-sys = "0.9"
opte-ioctl = { git = "https://github.com/oxidecomputer/opte", rev = "2d095de2258aa0653d669b72c741f26e608c81a6" }
oso = "0.27"
owo-colors = "4.2.2"
oximeter = { path = "oximeter/oximeter" }
oximeter-api = { path = "oximeter/api" }
oximeter-client = { path = "clients/oximeter-client" }
oximeter-db = { path = "oximeter/db/", default-features = false }
oximeter-collector = { path = "oximeter/collector" }
oximeter-instruments = { path = "oximeter/instruments" }
oximeter-macro-impl = { path = "oximeter/oximeter-macro-impl" }
oximeter-producer = { path = "oximeter/producer" }
oximeter-schema = { path = "oximeter/schema" }
oximeter-test-utils = { path = "oximeter/test-utils" }
oximeter-timeseries-macro = { path = "oximeter/timeseries-macro" }
oximeter-types = { path = "oximeter/types" }
oxql-types = { path = "oximeter/oxql-types" }
p256 = "0.13"
parallel-task-set = { path = "parallel-task-set" }
parse-display = "0.10.0"
partial-io = { version = "0.5.4", features = ["proptest1", "tokio1"] }
parse-size = "1.1.0"
paste = "1.0.15"
percent-encoding = "2.3.1"
peg = "0.8.5"
pem = "3.0"
# petname's default features pull in clap for CLI parsing, which we don't need.
# Note that if you depend on petname, you must also set default-features =
# false: petname = { workspace = true, default-features = false }.
petname = { version = "2.0.2", default-features = false, features = ["default-rng", "default-words"] }
petgraph = "0.8.2"
postgres-protocol = "0.6.8"
predicates = "3.1.3"
pretty_assertions = "1.4.1"
pretty-hex = "0.4.1"
prettyplease = { version = "0.2.35", features = ["verbatim"] }
proc-macro2 = "1.0"
progenitor = "0.10.0"
progenitor-client = "0.10.0"
# NOTE: if you change the pinned revision of the `bhyve_api` and propolis
# dependencies, you must also update the references in package-manifest.toml to
# match the new revision.
bhyve_api = { git = "https://github.com/oxidecomputer/propolis", rev = "c03bd1a29c775acfc65de561b8fc436e2459a633" }
propolis_api_types = { git = "https://github.com/oxidecomputer/propolis", rev = "c03bd1a29c775acfc65de561b8fc436e2459a633" }
propolis-client = { git = "https://github.com/oxidecomputer/propolis", rev = "c03bd1a29c775acfc65de561b8fc436e2459a633" }
propolis-mock-server = { git = "https://github.com/oxidecomputer/propolis", rev = "c03bd1a29c775acfc65de561b8fc436e2459a633" }
# NOTE: see above!
proptest = "1.7.0"
qorb = "0.4.0"
quote = "1.0"
rand = "0.8.5"
# We're still in the middle of migrating to rand 0.9.
rand09 = { package = "rand", version = "0.9.1" }
rand_core = "0.6.4"
rand_distr = "0.4.3"
rand_seeder = "0.3.0"
range-requests = { path = "range-requests" }
ratatui = "0.29.0"
rayon = "1.10"
rcgen = "0.12.1"
reconfigurator-cli = { path = "dev-tools/reconfigurator-cli" }
reedline = "0.40.0"
ref-cast = "1.0"
regex = "1.11.1"
regress = "0.10.3"
repo-depot-api = { path = "sled-agent/repo-depot-api" }
repo-depot-client = { path = "clients/repo-depot-client" }
reqwest = { version = "0.12.22", default-features = false }
ring = "0.17.14"
rpassword = "7.4.0"
rstest = "0.25.0"
rustfmt-wrapper = "0.2"
rustls = "0.22.2"
rustls-pemfile = "2.2.0"
rustyline = "14.0.0"
samael = { version = "0.0.19", features = ["xmlsec"] }
schemars = "0.8.22"
scopeguard = "1.2.0"
secrecy = "0.10.3"
semver = { version = "1.0.26", features = ["std", "serde"] }
serde = { version = "1.0", default-features = false, features = [ "derive", "rc" ] }
serde_cbor = "0.11.2"
serde_human_bytes = { git = "https://github.com/oxidecomputer/serde_human_bytes", branch = "main" }
serde_json = "1.0.140"
serde_tokenstream = "0.2"
serde_urlencoded = "0.7.1"
serde_with = { version = "3.14.0", default-features = false, features = ["alloc", "macros"] }
sha2 = "0.10.9"
sha3 = "0.10.8"
shell-words = "1.1.0"
signal-hook = "0.3"
signal-hook-tokio = { version = "0.3", features = [ "futures-v0_3" ] }
sigpipe = "0.1.3"
similar = { version = "2.7.0", features = ["bytes"] }
similar-asserts = "1.7.0"
# Don't change sled's version on accident; sled's on-disk format is not yet
# stable and requires manual migrations. In the limit this won't matter because
# the upgrade system will replace the DNS server zones entirely, but while we
# are still doing mupdate a change to the on-disk format will break existing DNS
# server zones.
sled = "=0.34.7"
sled-agent-api = { path = "sled-agent/api" }
sled-agent-client = { path = "clients/sled-agent-client" }
sled-agent-config-reconciler = { path = "sled-agent/config-reconciler" }
sled-agent-types = { path = "sled-agent/types" }
sled-agent-zone-images = { path = "sled-agent/zone-images" }
sled-agent-zone-images-examples = { path = "sled-agent/zone-images-examples" }
sled-diagnostics = { path = "sled-diagnostics" }
sled-hardware = { path = "sled-hardware" }
sled-hardware-types = { path = "sled-hardware/types" }
sled-storage = { path = "sled-storage" }
slog = { version = "2.7", features = [ "dynamic-keys", "max_level_trace", "release_max_level_debug" ] }
slog-async = "2.8"
slog-bunyan = "2.5"
slog-dtrace = "0.3"
slog-envlogger = "2.2"
slog-error-chain = { git = "https://github.com/oxidecomputer/slog-error-chain", branch = "main", features = ["derive"] }
slog-term = "2.9.1"
smf = "0.2"
socket2 = { version = "0.5", features = ["all"] }
sp-sim = { path = "sp-sim" }
sprockets-tls = { git = "https://github.com/oxidecomputer/sprockets.git", rev = "6d31fa63217c6a51061dc4afa1ebe175a0021981" }
sqlformat = "0.3.5"
sqlparser = { version = "0.45.0", features = [ "visitor" ] }
static_assertions = "1.1.0"
# Please do not change the Steno version to a Git dependency.  It makes it
# harder than expected to make breaking changes (even if you specify a specific
# SHA).  Cut a new Steno release instead.  See omicron#2117.
steno = "0.4.1"
strum = { version = "0.27.1", features = [ "derive" ] }
subprocess = "0.2.9"
subtle = "2.6.1"
supports-color = "3.0.2"
support-bundle-viewer = "0.1.2"
swrite = "0.1.0"
sync-ptr = "0.1.4"
libsw = { version = "3.5.0", features = ["tokio"] }
syn = { version = "2.0" }
tabled = "0.15.0"
tar = "0.4"
tempfile = "3.20"
term = "0.7"
termios = "0.3"
termtree = "0.5.1"
textwrap = { version = "0.16.2", features = [ "terminal_size" ] }
test-strategy = "0.4.3"
thiserror = "2.0"
tofino = { git = "https://github.com/oxidecomputer/tofino", branch = "main" }
tokio = "1.45.1"
tokio-postgres = { version = "0.7", features = [ "with-chrono-0_4", "with-uuid-1" ] }
tokio-stream = "0.1.17"
tokio-tungstenite = "0.23.1"
tokio-util = { version = "0.7.15", features = ["io", "io-util", "time"] }
toml = "0.8.23"
toml_edit = "0.22.27"
tough = { version = "0.20.0", features = [ "http" ] }
transceiver-controller = { git = "https://github.com/oxidecomputer/transceiver-control", features = [ "api-traits" ] }
trybuild = "1.0.105"
tufaceous = { git = "https://github.com/oxidecomputer/tufaceous", branch = "main" }
tufaceous-artifact = { git = "https://github.com/oxidecomputer/tufaceous", branch = "main", features = ["proptest", "schemars"] }
tufaceous-brand-metadata = { git = "https://github.com/oxidecomputer/tufaceous", branch = "main" }
tufaceous-lib = { git = "https://github.com/oxidecomputer/tufaceous", branch = "main" }
tui-tree-widget = "0.23.1"
typed-rng = { path = "typed-rng" }
typify = "0.3.0"
unicode-width = "0.1.13"
update-common = { path = "update-common" }
update-engine = { path = "update-engine" }
url = "2.5.4"
usdt = "0.5.0"
uuid = { version = "1.17.0", features = ["serde", "v4"] }
uzers = "0.12"
walkdir = "2.5"
whoami = "1.5"
wicket = { path = "wicket" }
wicket-common = { path = "wicket-common" }
wicketd-api = { path = "wicketd-api" }
wicketd-client = { path = "clients/wicketd-client" }
xshell = "0.2.7"
zerocopy = "0.8.26"
zeroize = { version = "1.8.1", features = ["zeroize_derive", "std"] }
zip = { version = "4.2.0", default-features = false, features = ["deflate","bzip2"] }
zone = { version = "0.3.1", default-features = false, features = ["async"] }

# newtype-uuid is set to default-features = false because we don't want to
# depend on std in omicron-uuid-kinds (in case a no-std library wants to access
# the kinds). However, uses of omicron-uuid-kinds _within omicron_ will have
# std and the other features enabled because they'll refer to it via
# omicron-uuid-kinds.workspace = true.
newtype-uuid = { version = "1.2.4", default-features = false }
omicron-uuid-kinds = { path = "uuid-kinds", features = ["serde", "schemars08", "uuid-v4"] }

# NOTE: The test profile inherits from the dev profile, so settings under
# profile.dev get inherited. AVOID setting anything under profile.test: that
# will cause dev and test builds to diverge, which will cause more Cargo build
# cache misses.

[profile.dev]
# Note: This used to be panic = "abort" earlier, but that caused a lot of
# duplicate dependency builds. Letting panic be "unwind" causes dependencies
# across `cargo test` and `cargo run` to be unified. See omicron#4392.
panic = "unwind"

# See https://github.com/oxidecomputer/omicron/issues/4009 for some background context here.
# By reducing the debug level (though keeping enough to have meaningful
# backtraces), we reduce incremental build time and binary size significantly.
debug = "line-tables-only"

[profile.dev.build-override]
# Setting this to line-tables-only results in a large improvement in build
# times, because it allows target and host dependencies to be unified.
debug = "line-tables-only"

# `bindgen` is used by `samael`'s build script; building it with optimizations
# makes that build script run ~5x faster, more than offsetting the additional
# build time added to `bindgen` itself.
[profile.dev.package.bindgen]
opt-level = 3

# `lalrpop` is used by `polar-core`'s build script; building it with
# optimizations makes that build script run ~20x faster, more than offsetting
# the additional build time added to `lalrpop` itself.
[profile.dev.package.lalrpop]
opt-level = 3

# `polar-core` is exercised heavily during the test suite and it's worthwhile to
# have it built with optimizations.
[profile.dev.package.polar-core]
opt-level = 3

# Password hashing is expensive by construction.  Build the hashing libraries
# with optimizations to significantly speed up tests.
[profile.dev.package.argon2]
opt-level = 3
[profile.dev.package.rust-argon2]
opt-level = 3

[profile.release]
panic = "abort"

# proptest based test generation and shrinking is expensive. Let's optimize it.
[profile.dev.package.proptest]
opt-level = 3

[profile.dev.package.bootstore]
opt-level = 3

# Crypto stuff always needs optimizations
[profile.dev.package.sha3]
opt-level = 3
[profile.dev.package.sha2]
opt-level = 3
[profile.dev.package.hkdf]
opt-level = 3
[profile.dev.package.chacha20poly1305]
opt-level = 3
[profile.dev.package.chacha20]
opt-level = 3
[profile.dev.package.vsss-rs]
opt-level = 3
[profile.dev.package.curve25519-dalek]
opt-level = 3
[profile.dev.package.aead]
opt-level = 3
[profile.dev.package.aes]
opt-level = 3
[profile.dev.package.aes-gcm]
opt-level = 3
[profile.dev.package.aws-lc-sys]
opt-level = 3
[profile.dev.package.bcrypt-pbkdf]
opt-level = 3
[profile.dev.package.blake2]
opt-level = 3
[profile.dev.package.blake2b_simd]
opt-level = 3
[profile.dev.package.block-buffer]
opt-level = 3
[profile.dev.package.block-padding]
opt-level = 3
[profile.dev.package.blowfish]
opt-level = 3
[profile.dev.package.constant_time_eq]
opt-level = 3
[profile.dev.package.crypto-bigint]
opt-level = 3
[profile.dev.package.crypto-common]
opt-level = 3
[profile.dev.package.ctr]
opt-level = 3
[profile.dev.package.cbc]
opt-level = 3
[profile.dev.package.digest]
opt-level = 3
[profile.dev.package.ed25519]
opt-level = 3
[profile.dev.package.ed25519-dalek]
opt-level = 3
[profile.dev.package.elliptic-curve]
opt-level = 3
[profile.dev.package.generic-array]
opt-level = 3
[profile.dev.package.getrandom]
opt-level = 3
[profile.dev.package.hmac]
opt-level = 3
[profile.dev.package.lpc55_sign]
opt-level = 3
[profile.dev.package.md5]
opt-level = 3
[profile.dev.package.md-5]
opt-level = 3
[profile.dev.package.num-bigint]
opt-level = 3
[profile.dev.package.num-bigint-dig]
opt-level = 3
[profile.dev.package.rand]
opt-level = 3
[profile.dev.package.rand_chacha]
opt-level = 3
[profile.dev.package.rand_core]
opt-level = 3
[profile.dev.package.rand_xorshift]
opt-level = 3
[profile.dev.package.rsa]
opt-level = 3
[profile.dev.package.signature]
opt-level = 3
[profile.dev.package.subtle]
opt-level = 3
[profile.dev.package.tiny-keccak]
opt-level = 3
[profile.dev.package.uuid]
opt-level = 3
[profile.dev.package.cipher]
opt-level = 3
[profile.dev.package.cpufeatures]
opt-level = 3
[profile.dev.package.poly1305]
opt-level = 3
[profile.dev.package.inout]
opt-level = 3
[profile.dev.package.keccak]
opt-level = 3
[profile.dev.package.gfss]
opt-level = 3


#
# It's common during development to use a local copy of various complex
# dependencies.  If you want to use those, uncomment one of these blocks.
#
# [patch.crates-io]
# diesel = { path = "../../diesel/diesel" }
# dropshot = { path = "../dropshot/dropshot" }
# dropshot_endpoint = { path = "../dropshot/dropshot_endpoint" }
# progenitor = { path = "../progenitor/progenitor" }
# progenitor-client = { path = "../progenitor/progenitor-client" }
# steno = { path = "../steno" }

# [patch."https://github.com/oxidecomputer/crucible"]
# crucible-agent-client = { path = "../crucible/agent-client" }
# crucible-pantry-client = { path = "../crucible/pantry-client" }
# crucible-smf = { path = "../crucible/smf" }

# [patch."https://github.com/oxidecomputer/diesel-dtrace"]
# diesel-dtrace = { path = "../diesel-dtrace" }

# [patch."https://github.com/oxidecomputer/falcon"]
# libfalcon = { path = "../falcon/lib" }

# [patch."https://github.com/oxidecomputer/propolis"]
# propolis-client = { path = "../propolis/lib/propolis-client" }
# propolis-mock-server = { path = "../propolis/bin/mock-server" }

# [patch."https://github.com/oxidecomputer/tufaceous"]
# tufaceous = { path = "../tufaceous/bin" }
# tufaceous-artifact = { path = "../tufaceous/artifact" }
# tufaceous-brand-metadata = { path = "../tufaceous/brand-metadata" }
# tufaceous-lib = { path = "../tufaceous/lib" }

# [patch."https://github.com/oxidecomputer/typify"]
# typify = { path = "../typify/typify" }

#
# We maintain a fork of pq-sys to address upstream issues.  See the
# README.oxide.md in the "oxide" branch of our fork for details.
#
[patch.crates-io.pq-sys]
git = 'https://github.com/oxidecomputer/pq-sys'
branch = "oxide/omicron"

# Using the workspace-hack via this patch directive means that it only applies
# while building within this workspace. If another workspace imports a crate
# from here via a git dependency, it will not have the workspace-hack applied
# to it.
[patch.crates-io.omicron-workspace-hack]
path = "workspace-hack"

# Several crates such as crucible and propolis have have a Git dependency on
# this repo. Omicron itself depends on these crates, which can lead to two
# copies of these crates in the dependency graph. (As a Git dependency, and as
# a path dependency.) The goal of omicron-uuid-kinds is to provide a unified
# registry of UUID kinds. Two copies of the same kinds floating around is
# unnecessary and painful.
#
# This directive ensures that whenever we see omicron-uuid-kinds as a Git
# dependency, we'll use the path dependency version of the crate instead.
#
# See also: uuid-kinds/README.adoc.
[patch."https://github.com/oxidecomputer/omicron"]
omicron-uuid-kinds = { path = "uuid-kinds" }
omicron-common = { path = "common" }
