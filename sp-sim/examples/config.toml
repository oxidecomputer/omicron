#
# SP simulator: example config file
#

[[simulated_sps.sidecar]]
serial_number = "SimSidecar0"
manufacturing_root_cert_seed = "01de01de01de01de01de01de01de01de01de01de01de01de01de01de01de01de"
device_id_cert_seed = "01de000000000000000000000000000000000000000000000000000000000000"

[[simulated_sps.sidecar.network_config]]
[simulated_sps.sidecar.network_config.simulated]
bind_addr = "[::1]:33300"

[[simulated_sps.sidecar.network_config]]
[simulated_sps.sidecar.network_config.simulated]
bind_addr = "[::1]:33301"

[[simulated_sps.sidecar.ereport_network_config]]
[simulated_sps.sidecar.ereport_network_config.simulated]
bind_addr = "[::1]:44400"

[[simulated_sps.sidecar.ereport_network_config]]
[simulated_sps.sidecar.ereport_network_config.simulated]
bind_addr = "[::1]:44401"

[[simulated_sps.gimlet]]
serial_number = "SimGimlet0"
manufacturing_root_cert_seed = "01de01de01de01de01de01de01de01de01de01de01de01de01de01de01de01de"
device_id_cert_seed = "01de000000000000000000000000000000000000000000000000000000000001"

[[simulated_sps.gimlet.network_config]]
[simulated_sps.gimlet.network_config.simulated]
bind_addr = "[::1]:33310"

[[simulated_sps.gimlet.network_config]]
[simulated_sps.gimlet.network_config.simulated]
bind_addr = "[::1]:33311"

[[simulated_sps.gimlet.ereport_network_config]]
[simulated_sps.gimlet.ereport_network_config.simulated]
bind_addr = "[::1]:44410"

[[simulated_sps.gimlet.ereport_network_config]]
[simulated_sps.gimlet.ereport_network_config.simulated]
bind_addr = "[::1]:44411"

[[simulated_sps.gimlet.components]]
id = "sp3-host-cpu"
device = "sp3-host-cpu"
description = "FAKE host cpu"
capabilities = 0
presence = "Present"
serial_console = "[::1]:33312"

[[simulated_sps.gimlet.components]]
id = "dev-0"
device = "tmp117"
description = "FAKE Southwest temperature sensor"
capabilities = 2
presence = "Present"
sensors = [
    { name = "Southwest", kind = "Temperature", last_data.value = 41.7890625, last_data.timestamp = 1234 },
]

[[simulated_sps.gimlet.components]]
id = "dev-46"
device = "sbtsi"
description = "CPU temperature sensor"
capabilities = 2
presence = "Present"
sensors = [
    { name = "CPU", kind = "Temperature", last_data.value = 64.5, last_data.timestamp = 1234 },
]

[simulated_sps.gimlet.ereport_config]
restart_id = "af1ebf85-36ba-4c31-bbec-b9825d6d9d8b"

[[simulated_sps.gimlet.ereport_config.ereports]]
task_name = "task_apollo_server"
task_gen = 13
uptime = 1233
class = "gov.nasa.apollo.o2_tanks.stir.begin"
message = "stirring the tanks"

[[simulated_sps.gimlet.ereport_config.ereports]]
task_name = "drv_ae35_server"
task_gen = 1
uptime = 1234
class = "io.discovery.ae35.fault"
message = "i've just picked up a fault in the AE-35 unit"
de = { scheme = "fmd", authority = { product-id = "HAL-9000-series computer", server-id = "HAL 9000"}, mod-name = "ae35-diagnosis" }
hours_to_failure = 72

[[simulated_sps.gimlet.ereport_config.ereports]]
task_name = "task_apollo_server"
task_gen = 13
uptime = 1237
class = "gov.nasa.apollo.fault"
message = "houston, we have a problem"
crew = ["Lovell", "Swigert", "Hayes"]

[[simulated_sps.gimlet.ereport_config.ereports]]
task_name = "drv_thingy_server"
task_gen = 2
uptime = 1240
class = "flagrant_error"
computer = false

[[simulated_sps.gimlet.ereport_config.ereports]]
task_name = "task_latex_server"
task_gen = 1
uptime = 1245
class = "overfull_hbox"
badness  = 10000

[[simulated_sps.gimlet]]
serial_number = "SimGimlet1"
manufacturing_root_cert_seed = "01de01de01de01de01de01de01de01de01de01de01de01de01de01de01de01de"
device_id_cert_seed = "01de000000000000000000000000000000000000000000000000000000000002"

[[simulated_sps.gimlet.network_config]]
[simulated_sps.gimlet.network_config.simulated]
bind_addr = "[::1]:33320"

[[simulated_sps.gimlet.network_config]]
[simulated_sps.gimlet.network_config.simulated]
bind_addr = "[::1]:33321"

[[simulated_sps.gimlet.ereport_network_config]]
[simulated_sps.gimlet.ereport_network_config.simulated]
bind_addr = "[::1]:44420"

[[simulated_sps.gimlet.ereport_network_config]]
[simulated_sps.gimlet.ereport_network_config.simulated]
bind_addr = "[::1]:44421"

[[simulated_sps.gimlet.components]]
id = "sp3-host-cpu"
device = "sp3-host-cpu"
description = "FAKE host cpu"
capabilities = 0
presence = "Present"
serial_console = "[::1]:33322"

[[simulated_sps.gimlet.components]]
id = "dev-0"
device = "tmp117"
description = "FAKE Southwest temperature sensor"
capabilities = 2
presence = "Present"
sensors = [
    { name = "Southwest", kind = "Temperature", last_data.value = 41.7890625, last_data.timestamp = 1234 },
]

[[simulated_sps.gimlet.components]]
id = "dev-46"
device = "sbtsi"
description = "CPU temperature sensor"
capabilities = 2
presence = "Present"
sensors = [
    { name = "CPU", kind = "Temperature", last_data.value = 63.1, last_data.timestamp = 1234 },
]


[simulated_sps.gimlet.ereport_config]
restart_id = "55e30cc7-a109-492f-aca9-735ed725df3c"

[[simulated_sps.gimlet.ereport_config.ereports]]
task_name = "task_thermal_server"
task_gen = 1
uptime = 1233
class = "computer.oxide.gimlet.chassis_integrity.fault"
nosub_class = "chassis_integrity.cat_hair_detected"
message = "cat hair detected inside gimlet"
de = { scheme = "fmd", mod-name = "hubris-thermal-diagnosis", mod-version = "1.0", authority = { "product-id" = "oxide", server-id = "SimGimlet1" }}
certainty = 0x64
cat_hair_amount = 10000

[log]
# Show log messages of this level and more severe
level = "debug"

# Example output to a terminal (with colors)
mode = "stderr-terminal"
# Example output to a file, appending if it already exists.
#mode = "file"
#path = "logs/server.log"
#if_exists = "append"
