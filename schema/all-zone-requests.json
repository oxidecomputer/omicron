{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AllZoneRequests",
  "type": "object",
  "required": [
    "generation",
    "requests"
  ],
  "properties": {
    "generation": {
      "$ref": "#/definitions/Generation"
    },
    "requests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ZoneRequest"
      }
    }
  },
  "definitions": {
    "DatasetKind": {
      "description": "The type of a dataset, and an auxiliary information necessary to successfully launch a zone managing the associated data.",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "cockroach_db"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "crucible"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "clickhouse"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "clickhouse_keeper"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "external_dns"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "internal_dns"
              ]
            }
          }
        }
      ]
    },
    "DatasetName": {
      "type": "object",
      "required": [
        "kind",
        "pool_name"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/DatasetKind"
        },
        "pool_name": {
          "$ref": "#/definitions/ZpoolName"
        }
      }
    },
    "DatasetRequest": {
      "description": "Describes a request to provision a specific dataset",
      "type": "object",
      "required": [
        "id",
        "name",
        "service_address"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "$ref": "#/definitions/DatasetName"
        },
        "service_address": {
          "type": "string"
        }
      }
    },
    "Generation": {
      "description": "Generation numbers stored in the database, used for optimistic concurrency control",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "IpNet": {
      "oneOf": [
        {
          "title": "v4",
          "allOf": [
            {
              "$ref": "#/definitions/Ipv4Net"
            }
          ]
        },
        {
          "title": "v6",
          "allOf": [
            {
              "$ref": "#/definitions/Ipv6Net"
            }
          ]
        }
      ]
    },
    "Ipv4Net": {
      "title": "An IPv4 subnet",
      "description": "An IPv4 subnet, including prefix and subnet mask",
      "examples": [
        "192.168.1.0/24"
      ],
      "type": "string",
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|1[0-9]|2[0-9]|3[0-2])$"
    },
    "Ipv6Net": {
      "title": "An IPv6 subnet",
      "description": "An IPv6 subnet, including prefix and subnet mask",
      "examples": [
        "fd12:3456::/64"
      ],
      "type": "string",
      "pattern": "^([fF][dD])[0-9a-fA-F]{2}:(([0-9a-fA-F]{1,4}:){6}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,6}:)([0-9a-fA-F]{1,4})?\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$"
    },
    "MacAddr": {
      "title": "A MAC address",
      "description": "A Media Access Control address, in EUI-48 format",
      "examples": [
        "ff:ff:ff:ff:ff:ff"
      ],
      "type": "string",
      "maxLength": 17,
      "minLength": 5,
      "pattern": "^([0-9a-fA-F]{0,2}:){5}[0-9a-fA-F]{0,2}$"
    },
    "Name": {
      "title": "A name unique within the parent collection",
      "description": "Names must begin with a lower case ASCII letter, be composed exclusively of lowercase ASCII, uppercase ASCII, numbers, and '-', and may not end with a '-'. Names cannot be a UUID though they may contain a UUID.",
      "type": "string",
      "maxLength": 63,
      "minLength": 1,
      "pattern": "^(?![0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$)^[a-z][a-z0-9-]*[a-zA-Z0-9]*$"
    },
    "NetworkInterface": {
      "description": "Information required to construct a virtual network interface",
      "type": "object",
      "required": [
        "id",
        "ip",
        "kind",
        "mac",
        "name",
        "primary",
        "slot",
        "subnet",
        "vni"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "ip": {
          "type": "string",
          "format": "ip"
        },
        "kind": {
          "$ref": "#/definitions/NetworkInterfaceKind"
        },
        "mac": {
          "$ref": "#/definitions/MacAddr"
        },
        "name": {
          "$ref": "#/definitions/Name"
        },
        "primary": {
          "type": "boolean"
        },
        "slot": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "subnet": {
          "$ref": "#/definitions/IpNet"
        },
        "vni": {
          "$ref": "#/definitions/Vni"
        }
      }
    },
    "NetworkInterfaceKind": {
      "description": "The type of network interface",
      "oneOf": [
        {
          "description": "A vNIC attached to a guest instance",
          "type": "object",
          "required": [
            "id",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "enum": [
                "instance"
              ]
            }
          }
        },
        {
          "description": "A vNIC associated with an internal service",
          "type": "object",
          "required": [
            "id",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "enum": [
                "service"
              ]
            }
          }
        }
      ]
    },
    "ServiceType": {
      "description": "Describes service-specific parameters.",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "external_dns_servers",
            "external_ip",
            "external_tls",
            "internal_address",
            "nic",
            "type"
          ],
          "properties": {
            "external_dns_servers": {
              "description": "External DNS servers Nexus can use to resolve external hosts.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "ip"
              }
            },
            "external_ip": {
              "description": "The address at which the external nexus server is reachable.",
              "type": "string",
              "format": "ip"
            },
            "external_tls": {
              "description": "Whether Nexus's external endpoint should use TLS",
              "type": "boolean"
            },
            "internal_address": {
              "description": "The address at which the internal nexus server is reachable.",
              "type": "string"
            },
            "nic": {
              "description": "The service vNIC providing external connectivity using OPTE.",
              "allOf": [
                {
                  "$ref": "#/definitions/NetworkInterface"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "nexus"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "dns_address",
            "http_address",
            "nic",
            "type"
          ],
          "properties": {
            "dns_address": {
              "description": "The address at which the external DNS server is reachable.",
              "type": "string"
            },
            "http_address": {
              "description": "The address at which the external DNS server API is reachable.",
              "type": "string"
            },
            "nic": {
              "description": "The service vNIC providing external connectivity using OPTE.",
              "allOf": [
                {
                  "$ref": "#/definitions/NetworkInterface"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "external_dns"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "dns_address",
            "gz_address",
            "gz_address_index",
            "http_address",
            "type"
          ],
          "properties": {
            "dns_address": {
              "type": "string"
            },
            "gz_address": {
              "description": "The addresses in the global zone which should be created\n\nFor the DNS service, which exists outside the sleds's typical subnet - adding an address in the GZ is necessary to allow inter-zone traffic routing.",
              "type": "string",
              "format": "ipv6"
            },
            "gz_address_index": {
              "description": "The address is also identified with an auxiliary bit of information to ensure that the created global zone address can have a unique name.",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "http_address": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "internal_dns"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "oximeter"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "crucible_pantry"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "dns_servers",
            "nic",
            "ntp_servers",
            "snat_cfg",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "dns_servers": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "ip"
              }
            },
            "domain": {
              "type": [
                "string",
                "null"
              ]
            },
            "nic": {
              "description": "The service vNIC providing outbound connectivity using OPTE.",
              "allOf": [
                {
                  "$ref": "#/definitions/NetworkInterface"
                }
              ]
            },
            "ntp_servers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "snat_cfg": {
              "description": "The SNAT configuration for outbound connections.",
              "allOf": [
                {
                  "$ref": "#/definitions/SourceNatConfig"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "boundary_ntp"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "dns_servers",
            "ntp_servers",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "dns_servers": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "ip"
              }
            },
            "domain": {
              "type": [
                "string",
                "null"
              ]
            },
            "ntp_servers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "internal_ntp"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "clickhouse"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "clickhouse_keeper"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "cockroach_db"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "crucible"
              ]
            }
          }
        }
      ]
    },
    "ServiceZoneRequest": {
      "description": "Describes a request to create a zone running one or more services.",
      "type": "object",
      "required": [
        "addresses",
        "id",
        "services",
        "zone_type"
      ],
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "ipv6"
          }
        },
        "dataset": {
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/DatasetRequest"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceZoneService"
          }
        },
        "zone_type": {
          "$ref": "#/definitions/ZoneType"
        }
      }
    },
    "ServiceZoneService": {
      "description": "Used to request that the Sled initialize a single service.",
      "type": "object",
      "required": [
        "details",
        "id"
      ],
      "properties": {
        "details": {
          "$ref": "#/definitions/ServiceType"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "SourceNatConfig": {
      "description": "An IP address and port range used for source NAT, i.e., making outbound network connections from guests or services.",
      "type": "object",
      "required": [
        "first_port",
        "ip",
        "last_port"
      ],
      "properties": {
        "first_port": {
          "description": "The first port used for source NAT, inclusive.",
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "ip": {
          "description": "The external address provided to the instance or service.",
          "type": "string",
          "format": "ip"
        },
        "last_port": {
          "description": "The last port used for source NAT, also inclusive.",
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        }
      }
    },
    "Vni": {
      "description": "A Geneve Virtual Network Identifier",
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "ZoneRequest": {
      "type": "object",
      "required": [
        "root",
        "zone"
      ],
      "properties": {
        "root": {
          "type": "string"
        },
        "zone": {
          "$ref": "#/definitions/ServiceZoneRequest"
        }
      }
    },
    "ZoneType": {
      "description": "The type of zone which may be requested from Sled Agent",
      "type": "string",
      "enum": [
        "clickhouse",
        "clickhouse_keeper",
        "cockroach_db",
        "crucible_pantry",
        "crucible",
        "external_dns",
        "internal_dns",
        "nexus",
        "ntp",
        "oximeter",
        "switch"
      ]
    },
    "ZpoolName": {
      "title": "The name of a Zpool",
      "description": "Zpool names are of the format ox{i,p}_<UUID>. They are either Internal or External, and should be unique",
      "type": "string",
      "pattern": "^ox[ip]_[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    }
  }
}