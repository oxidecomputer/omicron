/* Ereports from service processors */
CREATE TABLE IF NOT EXISTS omicron.public.sp_ereport (
    /*
     * the primary key for an ereport is formed from the tuple of the
     * reporter's restart ID (a randomly generated UUID) and the ereport's ENA
     * (a 64-bit integer that uniquely identifies the ereport within that
     * restart of the reporter).
     *
     * see: https://rfd.shared.oxide.computer/rfd/520#ereport-metadata
     */
    restart_id UUID NOT NULL,
    ena INT8 NOT NULL,
    time_deleted TIMESTAMPTZ,

    /* time at which the ereport was collected */
    time_collected TIMESTAMPTZ NOT NULL,
    /* UUID of the Nexus instance that collected the ereport */
    collector_id UUID NOT NULL,

    /*
     * physical location of the reporting SP
     *
     * these fields are always present, as they are how requests to collect
     * ereports are indexed by MGS.
     */
    sp_type omicron.public.sp_type NOT NULL,
    sp_slot INT4 NOT NULL,

    /*
     * VPD identity of the reporting SP.
     *
     * unlike the physical location, these fields are nullable, as an ereport
     * may be generated in a state where the SP doesn't know who or what it is.
     * consider that "i don't know my own identity" is a reasonable condition
     * to want to generate an ereport about!
     */
    serial_number STRING,
    part_number STRING,

    /*
     * The ereport class, which indicates the category of event reported.
     *
     * This is nullable, as it is extracted from the report JSON, and reports
     * missing class information must still be ingested.
     */
    class STRING,

    /*
     * JSON representation of the ereport as received from the SP.
     *
     * the raw JSON representation of the ereport is always stored, alongside
     * any more structured data that we extract from it, as extracting data
     * from the received ereport requires additional knowledge of the ereport
     * formats generated by the SP and its various tasks. as these may change,
     * and new ereports may be added which Nexus may not yet be aware of,
     * we always store the raw JSON representation of the ereport. as Nexus
     * becomes aware of new ereport schemas, it can go back and extract
     * structured data from previously collected ereports with those schemas,
     * but this is only possible if the JSON blob is persisted.
     *
     * see also: https://rfd.shared.oxide.computer/rfd/520#data-model
     */
    report JSONB NOT NULL,

    PRIMARY KEY (restart_id, ena)
);
