[package]
name = "omicron-sled-agent"
description = "Services for managing sled-local resources"
version = "0.1.0"
edition = "2021"
license = "MPL-2.0"

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
base64.workspace = true
bootstore.workspace = true
bootstrap-agent-client.workspace = true
bytes.workspace = true
camino.workspace = true
camino-tempfile.workspace = true
cancel-safe-futures.workspace = true
cfg-if.workspace = true
chrono.workspace = true
clap.workspace = true
# Only used by the simulated sled agent.
crucible-agent-client.workspace = true
ddm-admin-client.workspace = true
derive_more.workspace = true
dns-server.workspace = true
dns-service-client.workspace = true
dpd-client.workspace = true
display-error-chain.workspace = true
dropshot.workspace = true
flate2.workspace = true
flume.workspace = true
futures.workspace = true
glob.workspace = true
hex.workspace = true
http.workspace = true
hyper-staticfile.workspace = true
gateway-client.workspace = true
illumos-utils.workspace = true
installinator-common.workspace = true
internal-dns.workspace = true
ipnetwork.workspace = true
itertools.workspace = true
key-manager.workspace = true
libc.workspace = true
macaddr.workspace = true
mg-admin-client.workspace = true
nexus-client.workspace = true
nexus-config.workspace = true
nexus-types.workspace = true
omicron-common.workspace = true
once_cell.workspace = true
oximeter.workspace = true
oximeter-instruments.workspace = true
oximeter-producer.workspace = true
propolis-client.workspace = true
propolis-mock-server.workspace = true # Only used by the simulated sled agent
rand = { workspace = true, features = ["getrandom"] }
reqwest = { workspace = true, features = ["rustls-tls", "stream"] }
schemars = { workspace = true, features = ["chrono", "uuid1"] }
semver.workspace = true
serde.workspace = true
serde_human_bytes.workspace = true
serde_json = { workspace = true, features = ["raw_value"] }
sha3.workspace = true
sled-agent-client.workspace = true
sled-hardware.workspace = true
sled-storage.workspace = true
slog.workspace = true
slog-async.workspace = true
slog-dtrace.workspace = true
slog-term.workspace = true
smf.workspace = true
strum.workspace = true
tar.workspace = true
thiserror.workspace = true
tofino.workspace = true
tokio = { workspace = true, features = ["full"] }
toml.workspace = true
usdt.workspace = true
uuid.workspace = true
zeroize.workspace = true
zone.workspace = true
static_assertions.workspace = true
omicron-workspace-hack.workspace = true

[target.'cfg(target_os = "illumos")'.dependencies]
opte-ioctl.workspace = true

[dev-dependencies]
assert_matches.workspace = true
expectorate.workspace = true
guppy.workspace = true
http.workspace = true
hyper.workspace = true
omicron-test-utils.workspace = true
openapi-lint.workspace = true
openapiv3.workspace = true
pretty_assertions.workspace = true
rcgen.workspace = true
subprocess.workspace = true
slog-async.workspace = true
slog-term.workspace = true
tempfile.workspace = true
tokio-stream.workspace = true
tokio-util.workspace = true

illumos-utils = { workspace = true, features = ["testing", "tmp_keypath"] }
sled-storage = { workspace = true, features = ["testing"] }

#
# Disable doc builds by default for our binaries to work around issue
# rust-lang/cargo#8373.  These docs would not be very useful anyway.
#
[[bin]]
name = "sled-agent-sim"
doc = false

[[bin]]
name = "sled-agent"
doc = false

[features]
image-standard = []
image-trampoline = []
machine-gimlet = []
machine-gimlet-standalone = []
machine-non-gimlet = []
switch-asic = []
switch-stub = []
switch-softnpu = []
switch-hypersoftnpu = []
rack-topology-single-sled = []
rack-topology-multi-sled = []
