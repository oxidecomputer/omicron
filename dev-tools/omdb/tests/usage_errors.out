EXECUTING COMMAND: omdb []
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Omicron debugger (unstable)

Usage: omdb [OPTIONS] <COMMAND>

Commands:
  crucible-agent   Debug a specific crucible-agent
  crucible-pantry  Query a specific crucible-pantry
  db               Query the control plane database (CockroachDB)
  mgs              Debug a specific Management Gateway Service instance
  nexus            Debug a specific Nexus instance
  oximeter         Query oximeter collector state
  oxql             Enter the Oximeter Query Language shell for interactive querying
  reconfigurator   Interact with the Reconfigurator system
  sled-agent       Debug a specific Sled
  help             Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help (see more with '--help')

Connection Options:
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Omicron debugger (unstable)

This tool provides commands for directly querying Omicron components about their internal state
using internal APIs.  This is a prototype.  The commands and output are unstable and may change.

Usage: omdb [OPTIONS] <COMMAND>

Commands:
  crucible-agent   Debug a specific crucible-agent
  crucible-pantry  Query a specific crucible-pantry
  db               Query the control plane database (CockroachDB)
  mgs              Debug a specific Management Gateway Service instance
  nexus            Debug a specific Nexus instance
  oximeter         Query oximeter collector state
  oxql             Enter the Oximeter Query Language shell for interactive querying
  reconfigurator   Interact with the Reconfigurator system
  sled-agent       Debug a specific Sled
  help             Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>
          log level filter
          
          [env: LOG_LEVEL=]
          [default: warn]

      --color <COLOR>
          Color output
          
          [default: auto]
          [possible values: auto, always, never]

  -h, --help
          Print help (see a summary with '-h')

Connection Options:
      --dns-server <DNS_SERVER>
          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive
          Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["not-a-command"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: unrecognized subcommand 'not-a-command'

Usage: omdb [OPTIONS] <COMMAND>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["--not-a-command"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: unexpected argument '--not-a-command' found

Usage: omdb [OPTIONS] <COMMAND>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["db"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Query the control plane database (CockroachDB)

Usage: omdb db [OPTIONS] <COMMAND>

Commands:
  crucible-dataset             Commands relevant to Crucible datasets
  replacements-to-do           Print any Crucible resources that are located on expunged physical
                               disks
  rack                         Print information about the rack
  disks                        Print information about virtual disks
  dns                          Print information about internal and external DNS
  ereport                      Query and display error reports
  inventory                    Print information about collected hardware/software inventory
  physical-disks               Print information about physical disks
  region                       Print information about regions
  region-replacement           Query for information about region replacements, optionally manually
                               triggering one
  region-snapshot-replacement  Query for information about region snapshot replacements, optionally
                               manually triggering one
  saga                         Commands for querying and interacting with sagas
  sleds                        Print information about sleds
  instance                     Print information about customer instances
  instances                    Alias to `omdb instance list`
  network                      Print information about the network
  migrations                   Print information about migrations
  snapshots                    Print information about snapshots
  validate                     Validate the contents of the database
  volumes                      Print information about volumes
  vmm                          Print information about Propolis virtual machine manager (VMM)
                               processes
  vmms                         Alias to `omdb db vmm list`
  oximeter                     Print information about the oximeter collector
  alert                        Print information about alerts
  zpool                        Commands for querying and interacting with pools
  help                         Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Query the control plane database (CockroachDB)

Usage: omdb db [OPTIONS] <COMMAND>

Commands:
  crucible-dataset             Commands relevant to Crucible datasets
  replacements-to-do           Print any Crucible resources that are located on expunged physical
                               disks
  rack                         Print information about the rack
  disks                        Print information about virtual disks
  dns                          Print information about internal and external DNS
  ereport                      Query and display error reports
  inventory                    Print information about collected hardware/software inventory
  physical-disks               Print information about physical disks
  region                       Print information about regions
  region-replacement           Query for information about region replacements, optionally manually
                               triggering one
  region-snapshot-replacement  Query for information about region snapshot replacements, optionally
                               manually triggering one
  saga                         Commands for querying and interacting with sagas
  sleds                        Print information about sleds
  instance                     Print information about customer instances
  instances                    Alias to `omdb instance list`
  network                      Print information about the network
  migrations                   Print information about migrations
  snapshots                    Print information about snapshots
  validate                     Validate the contents of the database
  volumes                      Print information about volumes
  vmm                          Print information about Propolis virtual machine manager (VMM)
                               processes
  vmms                         Alias to `omdb db vmm list`
  oximeter                     Print information about the oximeter collector
  alert                        Print information about alerts
  zpool                        Commands for querying and interacting with pools
  help                         Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "disks"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about virtual disks

Usage: omdb db disks [OPTIONS] <COMMAND>

Commands:
  info      Get info for a specific disk
  list      Summarize current disks
  physical  Determine what crucible resources are on the given physical disk
  help      Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "dns"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about internal and external DNS

Usage: omdb db dns [OPTIONS] <COMMAND>

Commands:
  show   Summarize current version of all DNS zones
  diff   Show what changed in a given DNS version
  names  Show the full contents of a given DNS zone and version
  help   Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "dns", "diff"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: the following required arguments were not provided:
  <GROUP>
  <VERSION>

Usage: omdb db dns diff <GROUP> <VERSION>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["db", "dns", "names"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: the following required arguments were not provided:
  <GROUP>
  <VERSION>

Usage: omdb db dns names <GROUP> <VERSION>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["db", "inventory", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Print information about collected hardware/software inventory

Usage: omdb db inventory [OPTIONS] <COMMAND>

Commands:
  baseboard-ids   list all baseboards ever found
  cabooses        list all cabooses ever found
  collections     list and show details from particular collections
  physical-disks  show all physical disks ever found
  rot-pages       list all root of trust pages ever found
  help            Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "inventory", "collections", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
list and show details from particular collections

Usage: omdb db inventory collections [OPTIONS] <COMMAND>

Commands:
  list  list collections
  show  show what was found in a particular collection
  help  Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "inventory", "collections", "show"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: the following required arguments were not provided:
  <ID_OR_LATEST>

Usage: omdb db inventory collections show <ID_OR_LATEST>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["db", "inventory", "collections", "show", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
show what was found in a particular collection

Usage: omdb db inventory collections show [OPTIONS] <ID_OR_LATEST> [COMMAND]

Commands:
  all                show all information from the collection
  sp                 show information about service processors (baseboard)
  orphaned-datasets  show orphaned datasets
  help               Print this message or the help of the given subcommand(s)

Arguments:
  <ID_OR_LATEST>  id of the collection (or `latest`)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --show-long-strings      show long strings in their entirety
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "inventory", "collections", "show", "all", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
show all information from the collection

Usage: omdb db inventory collections show <ID_OR_LATEST> all [OPTIONS]

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "inventory", "collections", "show", "sp", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
show information about service processors (baseboard)

Usage: omdb db inventory collections show <ID_OR_LATEST> sp [OPTIONS] [SERIAL]

Arguments:
  [SERIAL]  show only information about one SP

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "ereport"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Query and display error reports

Usage: omdb db ereport [OPTIONS] <COMMAND>

Commands:
  list       List ereports
  info       Show an ereport
  reporters  List ereport reporters
  help       Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "ereport", "list", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
List ereports

Usage: omdb db ereport list [OPTIONS]

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -s, --serial <SERIALS>       Include only ereports from systems with the provided serial numbers
  -i, --id <IDS>               Include only ereports from the provided reporter restart IDs
  -c, --class <CLASSES>        Include only ereports with the provided class strings
  -b, --before <BEFORE>        Include only ereports collected before this timestamp
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -a, --after <AFTER>          Include only ereports collected after this timestamp
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "ereport", "reporters", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
List ereport reporters

Usage: omdb db ereport reporters [OPTIONS] [SERIAL]

Arguments:
  [SERIAL]  

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -t, --type <SLOT_TYPE>       
  -s, --slot <SLOT>            
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "ereport", "info", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Show an ereport

Usage: omdb db ereport info [OPTIONS] <RESTART_ID> <ENA>

Arguments:
  <RESTART_ID>  The reporter restart UUID of the ereport to show
  <ENA>         The ENA of the ereport within the reporter restart

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "sleds", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Print information about sleds

Usage: omdb db sleds [OPTIONS]

Options:
  -F, --filter <FILTER>
          Show sleds that match the given filter

          Possible values:
          - all:                           All sleds in the system, regardless of policy or state
          - commissioned:                  All sleds that are currently part of the control plane
            cluster
          - decommissioned:                All sleds that were previously part of the control plane
            cluster but have been decommissioned
          - discretionary:                 Sleds that are eligible for discretionary services
          - in-service:                    Sleds that are in service (even if they might not be
            eligible for discretionary services)
          - query-during-inventory:        Sleds whose sled agents should be queried for inventory
          - reservation-create:            Sleds on which reservations can be created
          - vpc-routing:                   Sleds which should be sent OPTE V2P mappings and Routing
            rules
          - vpc-firewall:                  Sleds which should be sent VPC firewall rules
          - tuf-artifact-replication:      Sleds which should have TUF repo artifacts replicated
            onto them
          - sps-updated-by-reconfigurator: Sleds whose SPs should be updated by Reconfigurator

      --log-level <LOG_LEVEL>
          log level filter
          
          [env: LOG_LEVEL=]
          [default: warn]

      --color <COLOR>
          Color output
          
          [default: auto]
          [possible values: auto, always, never]

  -h, --help
          Print help (see a summary with '-h')

Connection Options:
      --db-url <DB_URL>
          URL of the database SQL interface
          
          [env: OMDB_DB_URL=]

      --dns-server <DNS_SERVER>
          [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>
          limit to apply to queries that fetch rows
          
          [env: OMDB_FETCH_LIMIT=]
          [default: 500]

      --include-deleted
          whether to include soft-deleted records when enumerating objects that can be soft-deleted

Safety Options:
  -w, --destructive
          Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "saga"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Commands for querying and interacting with sagas

Usage: omdb db saga [OPTIONS] <COMMAND>

Commands:
  running       List running sagas
  inject-error  Inject an error into a saga's currently running node(s)
  abandon       Prevent new Nexus processes from resuming execution of a saga
  help          Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "snapshots"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about snapshots

Usage: omdb db snapshots [OPTIONS] <COMMAND>

Commands:
  info  Get info for a specific snapshot
  list  Summarize current snapshots
  help  Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "network"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about the network

Usage: omdb db network [OPTIONS] <COMMAND>

Commands:
  list-eips   List external IPs
  list-vnics  List virtual network interfaces
  help        Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --verbose                Print out raw data structures from the data store
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["mgs"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Debug a specific Management Gateway Service instance

Usage: omdb mgs [OPTIONS] <COMMAND>

Commands:
  dashboard  Dashboard of SPs
  inventory  Show information about devices and components visible to MGS
  sensors    Show information about sensors, as gleaned by MGS
  help       Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --mgs-url <MGS_URL>        URL of an MGS instance to query [env: OMDB_MGS_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Debug a specific Nexus instance

Usage: omdb nexus [OPTIONS] <COMMAND>

Commands:
  background-tasks      print information about background tasks
  blueprints            interact with blueprints
  chicken-switches      interact with reconfigurator chicken switches
  clickhouse-policy     interact with clickhouse policy
  mgs-updates           print information about pending MGS updates
  oximeter-read-policy  interact with oximeter read policy
  sagas                 view sagas, create and complete demo sagas
  sleds                 interact with sleds
  support-bundles       interact with support bundles [aliases: sb]
  update-status         show running artifact versions
  help                  Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus", "background-tasks"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
print information about background tasks

Usage: omdb nexus background-tasks [OPTIONS] <COMMAND>

Commands:
  doc           Show documentation about background tasks
  list          Print a summary of the status of all background tasks
  show          Print human-readable summary of the status of each background task
  print-report  Print an event report for a background task if available
  activate      Activate one or more background tasks
  help          Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus", "background-tasks", "show", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Print human-readable summary of the status of each background task

Usage: omdb nexus background-tasks show [OPTIONS] [TASK_NAME]...

Arguments:
  [TASK_NAME]...
          Names of background tasks to show (default: all)
          
          You can use any background task name here or one of the special strings "all",
          "dns_external", or "dns_internal".

Options:
      --log-level <LOG_LEVEL>
          log level filter
          
          [env: LOG_LEVEL=]
          [default: warn]

      --color <COLOR>
          Color output
          
          [default: auto]
          [possible values: auto, always, never]

  -h, --help
          Print help (see a summary with '-h')

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>
          URL of the Nexus internal API
          
          [env: OMDB_NEXUS_URL=]

      --dns-server <DNS_SERVER>
          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive
          Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["nexus", "blueprints"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
interact with blueprints

Usage: omdb nexus blueprints [OPTIONS] <COMMAND>

Commands:
  list        List all blueprints
  show        Show a blueprint
  diff        Diff two blueprints
  delete      Delete a blueprint
  target      Interact with the current target blueprint
  regenerate  Generate a new blueprint
  import      Import a blueprint
  help        Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus", "sagas"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
view sagas, create and complete demo sagas

Usage: omdb nexus sagas [OPTIONS] <COMMAND>

Commands:
  list           List sagas run by this Nexus
  demo-create    Create a "demo" saga
  demo-complete  Complete a demo saga started with "demo-create"
  help           Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus", "--nexus-internal-url", "http://[::1]:111", "sagas", "demo-create"]
termination: Exited(1)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
note: using Nexus URL http://[::1]:111
Error: This command is potentially destructive. Pass the `-w` / `--destructive` flag to allow it.
=============================================
EXECUTING COMMAND: omdb ["nexus", "sleds"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
interact with sleds

Usage: omdb nexus sleds [OPTIONS] <COMMAND>

Commands:
  list-uninitialized  List all uninitialized sleds
  add                 Add an uninitialized sled
  expunge             Expunge a sled (DANGEROUS)
  expunge-disk        Expunge a disk (DANGEROUS)
  help                Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["sled-agent"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Debug a specific Sled

Usage: omdb sled-agent [OPTIONS] <COMMAND>

Commands:
  zones           print information about zones
  bootstore       print information about the local bootstore node
  chicken-switch  control "chicken switches" (potentially-destructive sled-agent behavior that can
                  be toggled on or off via `omdb`)
  help            Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --sled-agent-url <SLED_AGENT_URL>  URL of the Sled internal API [env: OMDB_SLED_AGENT_URL=]
      --dns-server <DNS_SERVER>          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["sled-agent", "zones"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
print information about zones

Usage: omdb sled-agent zones [OPTIONS] <COMMAND>

Commands:
  list  Print list of all running control plane zones
  help  Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --sled-agent-url <SLED_AGENT_URL>  URL of the Sled internal API [env: OMDB_SLED_AGENT_URL=]
      --dns-server <DNS_SERVER>          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["oximeter", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Query oximeter collector state

Usage: omdb oximeter [OPTIONS] <COMMAND>

Commands:
  list-producers    List the producers the collector is assigned to poll
  producer-details  Fetch details about a single assigned producer
  help              Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --oximeter-url <OXIMETER_URL>  URL of the oximeter collector to query [env:
                                     OMDB_OXIMETER_URL=]
      --dns-server <DNS_SERVER>      [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["oxql", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Enter the Oximeter Query Language shell for interactive querying

Usage: omdb oxql [OPTIONS]

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --summaries              Print summaries of each SQL query run against the database
      --elapsed                Print the total elapsed query duration
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --clickhouse-url <CLICKHOUSE_URL>
          URL of the ClickHouse server to connect to [env: OMDB_CLICKHOUSE_URL=]
      --dns-server <DNS_SERVER>
          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["oxql", "--summarizes"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: unexpected argument '--summarizes' found

  tip: a similar argument exists: '--summaries'

Usage: omdb oxql --summaries

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["reconfigurator"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Interact with the Reconfigurator system

Usage: omdb reconfigurator [OPTIONS] <COMMAND>

Commands:
  export                    Save the current Reconfigurator state to a file
  archive                   Save the current Reconfigurator state to a file and remove historical
                            artifacts from the live system (e.g., non-target blueprints)
  history                   Show recent history of blueprints
  chicken-switches-history  Show the recent history of chicken switch settings
  help                      Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --color <COLOR>          Color output [default: auto] [possible values: auto, always, never]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["reconfigurator", "export"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: the following required arguments were not provided:
  <OUTPUT_FILE>

Usage: omdb reconfigurator export <OUTPUT_FILE>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["reconfigurator", "archive"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: the following required arguments were not provided:
  <OUTPUT_FILE>

Usage: omdb reconfigurator archive <OUTPUT_FILE>

For more information, try '--help'.
=============================================
