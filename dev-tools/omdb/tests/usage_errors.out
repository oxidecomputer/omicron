EXECUTING COMMAND: omdb []
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Omicron debugger (unstable)

Usage: omdb [OPTIONS] <COMMAND>

Commands:
  crucible-agent  Debug a specific crucible-agent
  db              Query the control plane database (CockroachDB)
  mgs             Debug a specific Management Gateway Service instance
  nexus           Debug a specific Nexus instance
  oximeter        Query oximeter collector state
  sled-agent      Debug a specific Sled
  help            Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help (see more with '--help')

Connection Options:
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Omicron debugger (unstable)

This tool provides commands for directly querying Omicron components about their internal state
using internal APIs.  This is a prototype.  The commands and output are unstable and may change.

Usage: omdb [OPTIONS] <COMMAND>

Commands:
  crucible-agent  Debug a specific crucible-agent
  db              Query the control plane database (CockroachDB)
  mgs             Debug a specific Management Gateway Service instance
  nexus           Debug a specific Nexus instance
  oximeter        Query oximeter collector state
  sled-agent      Debug a specific Sled
  help            Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>
          log level filter
          
          [env: LOG_LEVEL=]
          [default: warn]

  -h, --help
          Print help (see a summary with '-h')

Connection Options:
      --dns-server <DNS_SERVER>
          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive
          Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["not-a-command"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: unrecognized subcommand 'not-a-command'

Usage: omdb [OPTIONS] <COMMAND>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["--not-a-command"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: unexpected argument '--not-a-command' found

Usage: omdb [OPTIONS] <COMMAND>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["db"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Query the control plane database (CockroachDB)

Usage: omdb db [OPTIONS] <COMMAND>

Commands:
  rack                 Print information about the rack
  disks                Print information about disks
  dns                  Print information about internal and external DNS
  inventory            Print information about collected hardware/software inventory
  reconfigurator-save  Save the current Reconfigurator inputs to a file
  region-replacement   Query for information about region replacements, optionally manually
                           triggering one
  sleds                Print information about sleds
  instances            Print information about customer instances
  network              Print information about the network
  snapshots            Print information about snapshots
  validate             Validate the contents of the database
  help                 Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Query the control plane database (CockroachDB)

Usage: omdb db [OPTIONS] <COMMAND>

Commands:
  rack                 Print information about the rack
  disks                Print information about disks
  dns                  Print information about internal and external DNS
  inventory            Print information about collected hardware/software inventory
  reconfigurator-save  Save the current Reconfigurator inputs to a file
  region-replacement   Query for information about region replacements, optionally manually
                           triggering one
  sleds                Print information about sleds
  instances            Print information about customer instances
  network              Print information about the network
  snapshots            Print information about snapshots
  validate             Validate the contents of the database
  help                 Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "disks"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about disks

Usage: omdb db disks [OPTIONS] <COMMAND>

Commands:
  info      Get info for a specific disk
  list      Summarize current disks
  physical  Determine what crucible resources are on the given physical disk
  help      Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "dns"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about internal and external DNS

Usage: omdb db dns [OPTIONS] <COMMAND>

Commands:
  show   Summarize current version of all DNS zones
  diff   Show what changed in a given DNS version
  names  Show the full contents of a given DNS zone and version
  help   Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "dns", "diff"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: the following required arguments were not provided:
  <GROUP>
  <VERSION>

Usage: omdb db dns diff <GROUP> <VERSION>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["db", "dns", "names"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
error: the following required arguments were not provided:
  <GROUP>
  <VERSION>

Usage: omdb db dns names <GROUP> <VERSION>

For more information, try '--help'.
=============================================
EXECUTING COMMAND: omdb ["db", "sleds", "--help"]
termination: Exited(0)
---------------------------------------------
stdout:
Print information about sleds

Usage: omdb db sleds [OPTIONS]

Options:
  -F, --filter <FILTER>
          Show sleds that match the given filter

          Possible values:
          - commissioned:           All sleds that are currently part of the control plane cluster
          - decommissioned:         All sleds that were previously part of the control plane cluster
            but have been decommissioned
          - discretionary:          Sleds that are eligible for discretionary services
          - in-service:             Sleds that are in service (even if they might not be eligible
            for discretionary services)
          - query-during-inventory: Sleds whose sled agents should be queried for inventory
          - reservation-create:     Sleds on which reservations can be created
          - vpc-routing:            Sleds which should be sent OPTE V2P mappings and Routing rules
          - vpc-firewall:           Sleds which should be sent VPC firewall rules

      --log-level <LOG_LEVEL>
          log level filter
          
          [env: LOG_LEVEL=]
          [default: warn]

  -h, --help
          Print help (see a summary with '-h')

Connection Options:
      --db-url <DB_URL>
          URL of the database SQL interface
          
          [env: OMDB_DB_URL=]

      --dns-server <DNS_SERVER>
          [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>
          limit to apply to queries that fetch rows
          
          [env: OMDB_FETCH_LIMIT=]
          [default: 500]

      --include-deleted
          whether to include soft-deleted records when enumerating objects that can be soft-deleted

Safety Options:
  -w, --destructive
          Allow potentially-destructive subcommands
---------------------------------------------
stderr:
=============================================
EXECUTING COMMAND: omdb ["db", "snapshots"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about snapshots

Usage: omdb db snapshots [OPTIONS] <COMMAND>

Commands:
  info  Get info for a specific snapshot
  list  Summarize current snapshots
  help  Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["db", "network"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Print information about the network

Usage: omdb db network [OPTIONS] <COMMAND>

Commands:
  list-eips   List external IPs
  list-vnics  List virtual network interfaces
  help        Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
      --verbose                Print out raw data structures from the data store
  -h, --help                   Print help

Connection Options:
      --db-url <DB_URL>          URL of the database SQL interface [env: OMDB_DB_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Database Options:
      --fetch-limit <FETCH_LIMIT>  limit to apply to queries that fetch rows [env:
                                   OMDB_FETCH_LIMIT=] [default: 500]
      --include-deleted            whether to include soft-deleted records when enumerating objects
                                   that can be soft-deleted

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["mgs"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Debug a specific Management Gateway Service instance

Usage: omdb mgs [OPTIONS] <COMMAND>

Commands:
  dashboard  Dashboard of SPs
  inventory  Show information about devices and components visible to MGS
  sensors    Show information about sensors, as gleaned by MGS
  help       Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --mgs-url <MGS_URL>        URL of an MGS instance to query [env: OMDB_MGS_URL=]
      --dns-server <DNS_SERVER>  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Debug a specific Nexus instance

Usage: omdb nexus [OPTIONS] <COMMAND>

Commands:
  background-tasks  print information about background tasks
  blueprints        interact with blueprints
  sleds             interact with sleds
  help              Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus", "background-tasks"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
print information about background tasks

Usage: omdb nexus background-tasks [OPTIONS] <COMMAND>

Commands:
  doc       Show documentation about background tasks
  list      Print a summary of the status of all background tasks
  show      Print human-readable summary of the status of each background task
  activate  Activate one or more background tasks
  help      Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus", "blueprints"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
interact with blueprints

Usage: omdb nexus blueprints [OPTIONS] <COMMAND>

Commands:
  list        List all blueprints
  show        Show a blueprint
  diff        Diff two blueprints
  delete      Delete a blueprint
  target      Interact with the current target blueprint
  regenerate  Generate a new blueprint
  import      Import a blueprint
  help        Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["nexus", "sleds"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
interact with sleds

Usage: omdb nexus sleds [OPTIONS] <COMMAND>

Commands:
  list-uninitialized  List all uninitialized sleds
  add                 Add an uninitialized sled
  expunge             Expunge a sled (DANGEROUS)
  help                Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --nexus-internal-url <NEXUS_INTERNAL_URL>  URL of the Nexus internal API [env:
                                                 OMDB_NEXUS_URL=]
      --dns-server <DNS_SERVER>                  [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["sled-agent"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
Debug a specific Sled

Usage: omdb sled-agent [OPTIONS] <COMMAND>

Commands:
  zones      print information about zones
  zpools     print information about zpools
  bootstore  print information about the local bootstore node
  help       Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --sled-agent-url <SLED_AGENT_URL>  URL of the Sled internal API [env: OMDB_SLED_AGENT_URL=]
      --dns-server <DNS_SERVER>          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["sled-agent", "zones"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
print information about zones

Usage: omdb sled-agent zones [OPTIONS] <COMMAND>

Commands:
  list  Print list of all running control plane zones
  help  Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --sled-agent-url <SLED_AGENT_URL>  URL of the Sled internal API [env: OMDB_SLED_AGENT_URL=]
      --dns-server <DNS_SERVER>          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
EXECUTING COMMAND: omdb ["sled-agent", "zpools"]
termination: Exited(2)
---------------------------------------------
stdout:
---------------------------------------------
stderr:
print information about zpools

Usage: omdb sled-agent zpools [OPTIONS] <COMMAND>

Commands:
  list  Print list of all zpools managed by the sled agent
  help  Print this message or the help of the given subcommand(s)

Options:
      --log-level <LOG_LEVEL>  log level filter [env: LOG_LEVEL=] [default: warn]
  -h, --help                   Print help

Connection Options:
      --sled-agent-url <SLED_AGENT_URL>  URL of the Sled internal API [env: OMDB_SLED_AGENT_URL=]
      --dns-server <DNS_SERVER>          [env: OMDB_DNS_SERVER=]

Safety Options:
  -w, --destructive  Allow potentially-destructive subcommands
=============================================
