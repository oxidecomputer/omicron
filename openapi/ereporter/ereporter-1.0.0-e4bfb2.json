{
  "openapi": "3.0.3",
  "info": {
    "title": "Ereporter API",
    "description": "API for ereport producers",
    "contact": {
      "url": "https://oxide.computer",
      "email": "api@oxide.computer"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/ereports/{reporter_id}": {
      "get": {
        "summary": "Collect a tranche of ereports from this reporter.",
        "operationId": "ereports_get",
        "parameters": [
          {
            "in": "path",
            "name": "reporter_id",
            "description": "The UUID of the reporter from which to collct ereports.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "committed",
            "description": "The ENA of the last ereport committed to persistent storage from the requested reporter generation.\n\nIf the generation parameter matches the reporter's current generation, it is permitted to discard any ereports with ENAs up to and including this value. If the generation has changed from the provided generation, the reporter will not discard data.",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "generation",
            "description": "The generation (restart nonce) of the reporter at which all other query parameters are valid.\n\nIf this value does not match the reporter's current generation, the reporter's response will include the current generation, and will start at the earliest known ENA, rather than the provided `last_seen` ENA.`",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TypedUuidForEreporterGenerationKind"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of ereports to return in this tranche.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "start_at",
            "description": "If present, the reporter should not include ENAs earlier than this one in its response, provided that the query's requested generation matches the current generation.",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ereports"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Ereport": {
        "description": "An ereport message.",
        "type": "object",
        "properties": {
          "ena": {
            "description": "The ENA of the ereport.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "report": {
            "description": "The body of the ereport.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportKind"
              }
            ]
          }
        },
        "required": [
          "ena",
          "report"
        ]
      },
      "Ereports": {
        "description": "A tranche of ereports received from a reporter.",
        "type": "object",
        "properties": {
          "generation": {
            "description": "The reporter's current generation ID.\n\nIf this is not equal to the current known generation, then the reporter has restarted.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TypedUuidForEreporterGenerationKind"
              }
            ]
          },
          "next_page": {
            "nullable": true,
            "description": "If more ereports are present, this value contains the ENA of the ereport immediately after the last report in this tranche. If this is None, no more ereports are currently avaialble.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "reports": {
            "description": "The values of the ereports in this tranche.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ereport"
            }
          }
        },
        "required": [
          "generation",
          "reports"
        ]
      },
      "Error": {
        "description": "Error information from a response.",
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string"
          },
          "data": {}
        },
        "required": [
          "class",
          "data"
        ]
      },
      "ReportKind": {
        "description": "The body of an ereport: either an event is reported, or a loss report.",
        "oneOf": [
          {
            "description": "An ereport.",
            "type": "object",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "required": [
              "event"
            ],
            "additionalProperties": false
          },
          {
            "description": "Ereports were lost, or may have been lost.",
            "type": "object",
            "properties": {
              "loss": {
                "type": "object",
                "properties": {
                  "lost": {
                    "nullable": true,
                    "description": "If ereports are dropped because a buffer has reached its capacity, the reporter is strongly encouraged to attempt to count the number of ereports lost. In other cases, such as a reporter crashing and restarting, the reporter may not be capable of determining the number of ereports that were lost, or even *if* data loss actually occurred. Therefore, a `None` here indicates *possible* data loss, while a `Some(u32)` indicates *known* data loss.",
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0
                  }
                }
              }
            },
            "required": [
              "loss"
            ],
            "additionalProperties": false
          }
        ]
      },
      "TypedUuidForEreporterGenerationKind": {
        "type": "string",
        "format": "uuid"
      }
    },
    "responses": {
      "Error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
