{
  "openapi": "3.0.3",
  "info": {
    "title": "Oxide Technician Port Control Service",
    "description": "API for use by the technician port TUI: wicket",
    "contact": {
      "url": "https://oxide.computer",
      "email": "api@oxide.computer"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/artifacts-and-event-reports": {
      "get": {
        "summary": "An endpoint used to report all available artifacts and event reports.",
        "description": "The order of the returned artifacts is unspecified, and may change between calls even if the total set of artifacts has not.",
        "operationId": "get_artifacts_and_event_reports",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArtifactsAndEventReportsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ignition/{type}/{slot}/{command}": {
      "post": {
        "summary": "Send an ignition command targeting a specific SP.",
        "description": "This endpoint acts as a proxy to the MGS endpoint performing the same function, allowing wicket to communicate exclusively with wicketd (even though wicketd adds no meaningful functionality here beyond what MGS offers).",
        "operationId": "post_ignition_command",
        "parameters": [
          {
            "in": "path",
            "name": "command",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IgnitionCommand"
            }
          },
          {
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpType"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "resource updated"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/inventory": {
      "get": {
        "summary": "A status endpoint used to report high level information known to wicketd.",
        "description": "This endpoint can be polled to see if there have been state changes in the system that are useful to report to wicket.\nWicket, and possibly other callers, will retrieve the changed information, with follow up calls.",
        "operationId": "get_inventory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInventoryParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInventoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/repository": {
      "put": {
        "summary": "Upload a TUF repository to the server.",
        "description": "At any given time, wicketd will keep at most one TUF repository in memory. Any previously-uploaded repositories will be discarded.",
        "operationId": "put_repository",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "resource updated"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/update/{type}/{slot}": {
      "get": {
        "summary": "An endpoint to get the status of any update being performed or recently",
        "description": "completed on a single SP.",
        "operationId": "get_update_sp",
        "parameters": [
          {
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventReportForWicketdEngineSpec"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "summary": "An endpoint to start updating a sled.",
        "operationId": "post_start_update",
        "parameters": [
          {
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpType"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "resource updated"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "ArtifactId": {
        "description": "An identifier for an artifact.\n\nThe kind is [`ArtifactKind`], indicating that it might represent an artifact whose kind is unknown.",
        "type": "object",
        "properties": {
          "kind": {
            "description": "The kind of artifact this is.",
            "type": "string"
          },
          "name": {
            "description": "The artifact's name.",
            "type": "string"
          },
          "version": {
            "description": "The artifact's version.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SemverVersion"
              }
            ]
          }
        },
        "required": [
          "kind",
          "name",
          "version"
        ]
      },
      "Duration": {
        "type": "object",
        "properties": {
          "nanos": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "secs": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "required": [
          "nanos",
          "secs"
        ]
      },
      "Error": {
        "description": "Error information from a response.",
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ]
      },
      "EventReportForWicketdEngineSpec": {
        "description": "A report produced from an [`EventBuffer`](crate::EventBuffer).\n\nRemote reports can be passed into a [`StepContext`](crate::StepContext), in which case they show up as nested events.",
        "type": "object",
        "properties": {
          "last_seen": {
            "nullable": true,
            "description": "The last event seen.\n\n`last_seen` can be used to retrieve deltas of events.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "progress_events": {
            "description": "A list of progress events, or whether we're currently waiting for a progress event.\n\nCurrently, this produces one progress event for each top-level and nested event in progress.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgressEventForWicketdEngineSpec"
            }
          },
          "step_events": {
            "description": "A list of step events.\n\nStep events include success and failure events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepEventForWicketdEngineSpec"
            }
          }
        },
        "required": [
          "progress_events",
          "step_events"
        ]
      },
      "GetArtifactsAndEventReportsResponse": {
        "description": "The response to a `get_artifacts` call: the system version, and the list of all artifacts currently held by wicketd.",
        "type": "object",
        "properties": {
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtifactId"
            }
          },
          "event_reports": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/EventReportForWicketdEngineSpec"
              }
            }
          },
          "system_version": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SemverVersion"
              }
            ]
          }
        },
        "required": [
          "artifacts",
          "event_reports"
        ]
      },
      "GetInventoryParams": {
        "type": "object",
        "properties": {
          "force_refresh": {
            "description": "If true, refresh the state of these SPs from MGS prior to returning (instead of returning cached data).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpIdentifier"
            }
          }
        },
        "required": [
          "force_refresh"
        ]
      },
      "GetInventoryResponse": {
        "description": "The response to a `get_inventory` call: the inventory known to wicketd, or a notification that data is unavailable.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "inventory": {
                    "$ref": "#/components/schemas/RackV1Inventory"
                  },
                  "mgs_last_seen": {
                    "$ref": "#/components/schemas/Duration"
                  }
                },
                "required": [
                  "inventory",
                  "mgs_last_seen"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "response"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unavailable"
                ]
              }
            },
            "required": [
              "type"
            ]
          }
        ]
      },
      "ImageVersion": {
        "type": "object",
        "properties": {
          "epoch": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "version": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "required": [
          "epoch",
          "version"
        ]
      },
      "PowerState": {
        "description": "See RFD 81.\n\nThis enum only lists power states the SP is able to control; higher power states are controlled by ignition.",
        "type": "string",
        "enum": [
          "A0",
          "A1",
          "A2"
        ]
      },
      "ProgressCounter": {
        "description": "Current progress.\n\nBoth `current` and `total` are abstract counters. These counters are often a number of bytes. There is no guarantee that the counter won't go back in subsequent events; that can happen e.g. if a fetch happens from multiple peers within a single attempt.",
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "total": {
            "nullable": true,
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          }
        },
        "required": [
          "current"
        ]
      },
      "ProgressEventForGenericSpec": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The kind of event this is.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProgressEventKindForGenericSpec"
              }
            ]
          },
          "execution_id": {
            "description": "The execution ID.",
            "type": "string",
            "format": "uuid"
          },
          "total_elapsed": {
            "description": "Total time elapsed since the start of execution.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Duration"
              }
            ]
          }
        },
        "required": [
          "data",
          "execution_id",
          "total_elapsed"
        ]
      },
      "ProgressEventForWicketdEngineSpec": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The kind of event this is.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProgressEventKindForWicketdEngineSpec"
              }
            ]
          },
          "execution_id": {
            "description": "The execution ID.",
            "type": "string",
            "format": "uuid"
          },
          "total_elapsed": {
            "description": "Total time elapsed since the start of execution.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Duration"
              }
            ]
          }
        },
        "required": [
          "data",
          "execution_id",
          "total_elapsed"
        ]
      },
      "ProgressEventKindForGenericSpec": {
        "oneOf": [
          {
            "description": "The update engine is waiting for a progress message.\n\nThe update engine sends this message immediately after a [`StepEvent`] corresponding to a new step.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number currently being executed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "Total time elapsed since the start of the attempt.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "waiting_for_progress"
                ]
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "step",
              "step_elapsed"
            ]
          },
          {
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number currently being executed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "Total time elapsed since the start of the attempt.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "progress"
                ]
              },
              "metadata": {
                "description": "Metadata that was returned with progress."
              },
              "progress": {
                "nullable": true,
                "description": "Current progress.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProgressCounter"
                  }
                ]
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "metadata",
              "step",
              "step_elapsed"
            ]
          },
          {
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number currently being executed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "event": {
                "description": "The event that occurred.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProgressEventForGenericSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "nested"
                ]
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "event",
              "kind",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "Future variants that might be unknown.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown"
                ]
              }
            },
            "required": [
              "kind"
            ]
          }
        ]
      },
      "ProgressEventKindForWicketdEngineSpec": {
        "oneOf": [
          {
            "description": "The update engine is waiting for a progress message.\n\nThe update engine sends this message immediately after a [`StepEvent`] corresponding to a new step.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number currently being executed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "Total time elapsed since the start of the attempt.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "waiting_for_progress"
                ]
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "step",
              "step_elapsed"
            ]
          },
          {
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number currently being executed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "Total time elapsed since the start of the attempt.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "progress"
                ]
              },
              "metadata": {
                "description": "Metadata that was returned with progress."
              },
              "progress": {
                "nullable": true,
                "description": "Current progress.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProgressCounter"
                  }
                ]
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "metadata",
              "step",
              "step_elapsed"
            ]
          },
          {
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number currently being executed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "event": {
                "description": "The event that occurred.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProgressEventForGenericSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "nested"
                ]
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "event",
              "kind",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "Future variants that might be unknown.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown"
                ]
              }
            },
            "required": [
              "kind"
            ]
          }
        ]
      },
      "RackV1Inventory": {
        "description": "The current state of the v1 Rack as known to wicketd",
        "type": "object",
        "properties": {
          "sps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpInventory"
            }
          }
        },
        "required": [
          "sps"
        ]
      },
      "RotImageDetails": {
        "type": "object",
        "properties": {
          "digest": {
            "type": "string"
          },
          "version": {
            "$ref": "#/components/schemas/ImageVersion"
          }
        },
        "required": [
          "digest",
          "version"
        ]
      },
      "RotInventory": {
        "description": "RoT-related data that isn't already supplied in [`SpState`].",
        "type": "object",
        "properties": {
          "caboose": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SpComponentCaboose"
              }
            ]
          }
        }
      },
      "RotSlot": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "slot": {
                "type": "string",
                "enum": [
                  "a"
                ]
              }
            },
            "required": [
              "slot"
            ]
          },
          {
            "type": "object",
            "properties": {
              "slot": {
                "type": "string",
                "enum": [
                  "b"
                ]
              }
            },
            "required": [
              "slot"
            ]
          }
        ]
      },
      "RotState": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "active": {
                "$ref": "#/components/schemas/RotSlot"
              },
              "slot_a": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RotImageDetails"
                  }
                ]
              },
              "slot_b": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RotImageDetails"
                  }
                ]
              },
              "state": {
                "type": "string",
                "enum": [
                  "enabled"
                ]
              }
            },
            "required": [
              "active",
              "state"
            ]
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "communication_failed"
                ]
              }
            },
            "required": [
              "message",
              "state"
            ]
          }
        ]
      },
      "SemverVersion": {
        "type": "string",
        "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
      },
      "SpComponentCaboose": {
        "type": "object",
        "properties": {
          "board": {
            "type": "string"
          },
          "git_commit": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "board",
          "git_commit",
          "name"
        ]
      },
      "SpComponentInfo": {
        "description": "Overview of a single SP component.",
        "type": "object",
        "properties": {
          "capabilities": {
            "description": "`capabilities` is a bitmask; interpret it via [`gateway_messages::DeviceCapabilities`].",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "component": {
            "description": "The unique identifier for this component.",
            "type": "string"
          },
          "description": {
            "description": "A human-readable description of the component.",
            "type": "string"
          },
          "device": {
            "description": "The name of the physical device.",
            "type": "string"
          },
          "presence": {
            "description": "Whether or not the component is present, to the best of the SP's ability to judge.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SpComponentPresence"
              }
            ]
          },
          "serial_number": {
            "nullable": true,
            "description": "The component's serial number, if it has one.",
            "type": "string"
          }
        },
        "required": [
          "capabilities",
          "component",
          "description",
          "device",
          "presence"
        ]
      },
      "SpComponentPresence": {
        "description": "Description of the presence or absence of a component.\n\nThe presence of some components may vary based on the power state of the sled (e.g., components that time out or appear unavailable if the sled is in A2 may become present when the sled moves to A0).",
        "oneOf": [
          {
            "description": "The component is present.",
            "type": "string",
            "enum": [
              "present"
            ]
          },
          {
            "description": "The component is not present.",
            "type": "string",
            "enum": [
              "not_present"
            ]
          },
          {
            "description": "The component is present but in a failed or faulty state.",
            "type": "string",
            "enum": [
              "failed"
            ]
          },
          {
            "description": "The SP is unable to determine the presence of the component.",
            "type": "string",
            "enum": [
              "unavailable"
            ]
          },
          {
            "description": "The SP's attempt to determine the presence of the component timed out.",
            "type": "string",
            "enum": [
              "timeout"
            ]
          },
          {
            "description": "The SP's attempt to determine the presence of the component failed.",
            "type": "string",
            "enum": [
              "error"
            ]
          }
        ]
      },
      "SpComponentUpdateStage": {
        "type": "string",
        "enum": [
          "sending",
          "preparing",
          "writing"
        ]
      },
      "SpIdentifier": {
        "type": "object",
        "properties": {
          "slot": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "type": {
            "$ref": "#/components/schemas/SpType"
          }
        },
        "required": [
          "slot",
          "type"
        ]
      },
      "SpIgnition": {
        "description": "State of an ignition target.\n\nTODO: Ignition returns much more information than we're reporting here: do we want to expand this?",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "present": {
                "type": "string",
                "enum": [
                  "no"
                ]
              }
            },
            "required": [
              "present"
            ]
          },
          {
            "type": "object",
            "properties": {
              "ctrl_detect_0": {
                "type": "boolean"
              },
              "ctrl_detect_1": {
                "type": "boolean"
              },
              "flt_a2": {
                "type": "boolean"
              },
              "flt_a3": {
                "type": "boolean"
              },
              "flt_rot": {
                "type": "boolean"
              },
              "flt_sp": {
                "type": "boolean"
              },
              "id": {
                "$ref": "#/components/schemas/SpIgnitionSystemType"
              },
              "power": {
                "type": "boolean"
              },
              "present": {
                "type": "string",
                "enum": [
                  "yes"
                ]
              }
            },
            "required": [
              "ctrl_detect_0",
              "ctrl_detect_1",
              "flt_a2",
              "flt_a3",
              "flt_rot",
              "flt_sp",
              "id",
              "power",
              "present"
            ]
          }
        ]
      },
      "SpIgnitionSystemType": {
        "description": "TODO: Do we want to bake in specific board names, or use raw u16 ID numbers?",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "system_type": {
                "type": "string",
                "enum": [
                  "gimlet"
                ]
              }
            },
            "required": [
              "system_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "system_type": {
                "type": "string",
                "enum": [
                  "sidecar"
                ]
              }
            },
            "required": [
              "system_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "system_type": {
                "type": "string",
                "enum": [
                  "psc"
                ]
              }
            },
            "required": [
              "system_type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0
              },
              "system_type": {
                "type": "string",
                "enum": [
                  "unknown"
                ]
              }
            },
            "required": [
              "id",
              "system_type"
            ]
          }
        ]
      },
      "SpInventory": {
        "description": "SP-related data",
        "type": "object",
        "properties": {
          "caboose": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SpComponentCaboose"
              }
            ]
          },
          "components": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpComponentInfo"
            }
          },
          "id": {
            "$ref": "#/components/schemas/SpIdentifier"
          },
          "ignition": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SpIgnition"
              }
            ]
          },
          "rot": {
            "$ref": "#/components/schemas/RotInventory"
          },
          "state": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SpState"
              }
            ]
          }
        },
        "required": [
          "id",
          "rot"
        ]
      },
      "SpState": {
        "type": "object",
        "properties": {
          "base_mac_address": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0
            }
          },
          "hubris_archive_id": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "power_state": {
            "$ref": "#/components/schemas/PowerState"
          },
          "revision": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "rot": {
            "$ref": "#/components/schemas/RotState"
          },
          "serial_number": {
            "type": "string"
          },
          "version": {
            "$ref": "#/components/schemas/ImageVersion"
          }
        },
        "required": [
          "base_mac_address",
          "hubris_archive_id",
          "model",
          "power_state",
          "revision",
          "rot",
          "serial_number",
          "version"
        ]
      },
      "SpType": {
        "type": "string",
        "enum": [
          "sled",
          "power",
          "switch"
        ]
      },
      "StepComponentSummaryForGenericSpec": {
        "type": "object",
        "properties": {
          "component": {
            "description": "The component."
          },
          "total_component_steps": {
            "description": "The number of steps present in this component.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          }
        },
        "required": [
          "component",
          "total_component_steps"
        ]
      },
      "StepComponentSummaryForWicketdEngineSpec": {
        "type": "object",
        "properties": {
          "component": {
            "description": "The component.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateComponent"
              }
            ]
          },
          "total_component_steps": {
            "description": "The number of steps present in this component.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          }
        },
        "required": [
          "component",
          "total_component_steps"
        ]
      },
      "StepEventForGenericSpec": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The kind of event this is.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StepEventKindForGenericSpec"
              }
            ]
          },
          "event_index": {
            "description": "A monotonically increasing index for this `StepEvent`.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "execution_id": {
            "description": "The execution ID.",
            "type": "string",
            "format": "uuid"
          },
          "total_elapsed": {
            "description": "Total time elapsed since the start of execution.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Duration"
              }
            ]
          }
        },
        "required": [
          "data",
          "event_index",
          "execution_id",
          "total_elapsed"
        ]
      },
      "StepEventForWicketdEngineSpec": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The kind of event this is.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StepEventKindForWicketdEngineSpec"
              }
            ]
          },
          "event_index": {
            "description": "A monotonically increasing index for this `StepEvent`.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "execution_id": {
            "description": "The execution ID.",
            "type": "string",
            "format": "uuid"
          },
          "total_elapsed": {
            "description": "Total time elapsed since the start of execution.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Duration"
              }
            ]
          }
        },
        "required": [
          "data",
          "event_index",
          "execution_id",
          "total_elapsed"
        ]
      },
      "StepEventKindForGenericSpec": {
        "oneOf": [
          {
            "description": "No steps were defined, and the executor exited without doing anything.\n\nThis is a terminal event: it is guaranteed that no more events will be seen after this one.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "no_steps_defined"
                ]
              }
            },
            "required": [
              "kind"
            ]
          },
          {
            "description": "Execution was started.\n\nThis is an initial event -- it is always expected to be the first event received from the event stream.",
            "type": "object",
            "properties": {
              "components": {
                "description": "A list of components, along with the number of items each component has.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StepComponentSummaryForGenericSpec"
                }
              },
              "first_step": {
                "description": "Information about the first step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "execution_started"
                ]
              },
              "steps": {
                "description": "The list of steps that will be executed.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StepInfoForGenericSpec"
                }
              }
            },
            "required": [
              "components",
              "first_step",
              "kind",
              "steps"
            ]
          },
          {
            "description": "Progress was reset along an attempt, and this attempt is going down a different path.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The current attempt number.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The amount of time this attempt has taken so far.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "progress_reset"
                ]
              },
              "message": {
                "description": "A message assocaited with the reset.",
                "type": "string"
              },
              "metadata": {
                "description": "Progress-related metadata associated with this attempt."
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "message",
              "metadata",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "An attempt failed and this step is being retried.",
            "type": "object",
            "properties": {
              "attempt_elapsed": {
                "description": "The amount of time the previous attempt took.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "attempt_retry"
                ]
              },
              "message": {
                "description": "A message associated with the retry.",
                "type": "string"
              },
              "next_attempt": {
                "description": "The attempt number for the next attempt.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt_elapsed",
              "kind",
              "message",
              "next_attempt",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "A step is complete and the next step has been started.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number that completed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "step_completed"
                ]
              },
              "next_step": {
                "description": "The next step that is being started.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "outcome": {
                "description": "The outcome of the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepOutcomeForGenericSpec"
                  }
                ]
              },
              "step": {
                "description": "Information about the step that just completed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "next_step",
              "outcome",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "Execution is complete.\n\nThis is a terminal event: it is guaranteed that no more events will be seen after this one.",
            "type": "object",
            "properties": {
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "execution_completed"
                ]
              },
              "last_attempt": {
                "description": "The attempt number that completed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "last_outcome": {
                "description": "The outcome of the last step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepOutcomeForGenericSpec"
                  }
                ]
              },
              "last_step": {
                "description": "Information about the last step that completed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt_elapsed",
              "kind",
              "last_attempt",
              "last_outcome",
              "last_step",
              "step_elapsed"
            ]
          },
          {
            "description": "Execution failed.\n\nThis is a terminal event: it is guaranteed that no more events will be seen after this one.",
            "type": "object",
            "properties": {
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "causes": {
                "description": "A chain of causes associated with the failure.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "failed_step": {
                "description": "Information about the step that failed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "execution_failed"
                ]
              },
              "message": {
                "description": "A message associated with the failure.",
                "type": "string"
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "total_attempts": {
                "description": "The total number of attempts that were performed before the step failed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              }
            },
            "required": [
              "attempt_elapsed",
              "causes",
              "failed_step",
              "kind",
              "message",
              "step_elapsed",
              "total_attempts"
            ]
          },
          {
            "description": "A nested step event occurred.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The current attempt number.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "event": {
                "description": "The event that occurred.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepEventForGenericSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "nested"
                ]
              },
              "step": {
                "description": "Information about the step that's occurring.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForGenericSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "event",
              "kind",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "Future variants that might be unknown.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown"
                ]
              }
            },
            "required": [
              "kind"
            ]
          }
        ]
      },
      "StepEventKindForWicketdEngineSpec": {
        "oneOf": [
          {
            "description": "No steps were defined, and the executor exited without doing anything.\n\nThis is a terminal event: it is guaranteed that no more events will be seen after this one.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "no_steps_defined"
                ]
              }
            },
            "required": [
              "kind"
            ]
          },
          {
            "description": "Execution was started.\n\nThis is an initial event -- it is always expected to be the first event received from the event stream.",
            "type": "object",
            "properties": {
              "components": {
                "description": "A list of components, along with the number of items each component has.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StepComponentSummaryForWicketdEngineSpec"
                }
              },
              "first_step": {
                "description": "Information about the first step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "execution_started"
                ]
              },
              "steps": {
                "description": "The list of steps that will be executed.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StepInfoForWicketdEngineSpec"
                }
              }
            },
            "required": [
              "components",
              "first_step",
              "kind",
              "steps"
            ]
          },
          {
            "description": "Progress was reset along an attempt, and this attempt is going down a different path.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The current attempt number.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The amount of time this attempt has taken so far.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "progress_reset"
                ]
              },
              "message": {
                "description": "A message assocaited with the reset.",
                "type": "string"
              },
              "metadata": {
                "description": "Progress-related metadata associated with this attempt."
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "message",
              "metadata",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "An attempt failed and this step is being retried.",
            "type": "object",
            "properties": {
              "attempt_elapsed": {
                "description": "The amount of time the previous attempt took.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "attempt_retry"
                ]
              },
              "message": {
                "description": "A message associated with the retry.",
                "type": "string"
              },
              "next_attempt": {
                "description": "The attempt number for the next attempt.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "step": {
                "description": "Information about the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt_elapsed",
              "kind",
              "message",
              "next_attempt",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "A step is complete and the next step has been started.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The attempt number that completed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "step_completed"
                ]
              },
              "next_step": {
                "description": "The next step that is being started.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "outcome": {
                "description": "The outcome of the step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepOutcomeForWicketdEngineSpec"
                  }
                ]
              },
              "step": {
                "description": "Information about the step that just completed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "kind",
              "next_step",
              "outcome",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "Execution is complete.\n\nThis is a terminal event: it is guaranteed that no more events will be seen after this one.",
            "type": "object",
            "properties": {
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "execution_completed"
                ]
              },
              "last_attempt": {
                "description": "The attempt number that completed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "last_outcome": {
                "description": "The outcome of the last step.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepOutcomeForWicketdEngineSpec"
                  }
                ]
              },
              "last_step": {
                "description": "Information about the last step that completed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt_elapsed",
              "kind",
              "last_attempt",
              "last_outcome",
              "last_step",
              "step_elapsed"
            ]
          },
          {
            "description": "Execution failed.\n\nThis is a terminal event: it is guaranteed that no more events will be seen after this one.",
            "type": "object",
            "properties": {
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "causes": {
                "description": "A chain of causes associated with the failure.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "failed_step": {
                "description": "Information about the step that failed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "execution_failed"
                ]
              },
              "message": {
                "description": "A message associated with the failure.",
                "type": "string"
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "total_attempts": {
                "description": "The total number of attempts that were performed before the step failed.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              }
            },
            "required": [
              "attempt_elapsed",
              "causes",
              "failed_step",
              "kind",
              "message",
              "step_elapsed",
              "total_attempts"
            ]
          },
          {
            "description": "A nested step event occurred.",
            "type": "object",
            "properties": {
              "attempt": {
                "description": "The current attempt number.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "attempt_elapsed": {
                "description": "The time it took for this attempt to complete.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              },
              "event": {
                "description": "The event that occurred.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepEventForGenericSpec"
                  }
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "nested"
                ]
              },
              "step": {
                "description": "Information about the step that's occurring.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StepInfoWithMetadataForWicketdEngineSpec"
                  }
                ]
              },
              "step_elapsed": {
                "description": "Total time elapsed since the start of the step. Includes prior attempts.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Duration"
                  }
                ]
              }
            },
            "required": [
              "attempt",
              "attempt_elapsed",
              "event",
              "kind",
              "step",
              "step_elapsed"
            ]
          },
          {
            "description": "Future variants that might be unknown.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown"
                ]
              }
            },
            "required": [
              "kind"
            ]
          }
        ]
      },
      "StepInfoForGenericSpec": {
        "description": "Serializable information about a step.",
        "type": "object",
        "properties": {
          "component": {
            "description": "The component that this step is part of."
          },
          "component_index": {
            "description": "The index of the step within the component.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "description": {
            "description": "The description for this step.",
            "type": "string"
          },
          "id": {
            "description": "An identifier for this step."
          },
          "index": {
            "description": "The index of the step within all steps to be executed.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "total_component_steps": {
            "description": "The total number of steps in this component.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          }
        },
        "required": [
          "component",
          "component_index",
          "description",
          "id",
          "index",
          "total_component_steps"
        ]
      },
      "StepInfoForWicketdEngineSpec": {
        "description": "Serializable information about a step.",
        "type": "object",
        "properties": {
          "component": {
            "description": "The component that this step is part of.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateComponent"
              }
            ]
          },
          "component_index": {
            "description": "The index of the step within the component.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "description": {
            "description": "The description for this step.",
            "type": "string"
          },
          "id": {
            "description": "An identifier for this step.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateStepId"
              }
            ]
          },
          "index": {
            "description": "The index of the step within all steps to be executed.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "total_component_steps": {
            "description": "The total number of steps in this component.",
            "type": "integer",
            "format": "uint",
            "minimum": 0
          }
        },
        "required": [
          "component",
          "component_index",
          "description",
          "id",
          "index",
          "total_component_steps"
        ]
      },
      "StepInfoWithMetadataForGenericSpec": {
        "description": "Serializable information about a step.",
        "type": "object",
        "properties": {
          "info": {
            "description": "Information about this step.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StepInfoForGenericSpec"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "description": "Additional metadata associated with this step."
          }
        },
        "required": [
          "info"
        ]
      },
      "StepInfoWithMetadataForWicketdEngineSpec": {
        "description": "Serializable information about a step.",
        "type": "object",
        "properties": {
          "info": {
            "description": "Information about this step.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StepInfoForWicketdEngineSpec"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "description": "Additional metadata associated with this step."
          }
        },
        "required": [
          "info"
        ]
      },
      "StepOutcomeForGenericSpec": {
        "oneOf": [
          {
            "description": "The step completed successfully.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "success"
                ]
              },
              "metadata": {
                "description": "Completion metadata associated with the step."
              }
            },
            "required": [
              "kind",
              "metadata"
            ]
          },
          {
            "description": "The step completed with a warning.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "warning"
                ]
              },
              "message": {
                "description": "A warning message.",
                "type": "string"
              },
              "metadata": {
                "description": "Completion metadata associated with the step."
              }
            },
            "required": [
              "kind",
              "message",
              "metadata"
            ]
          },
          {
            "description": "The step was skipped with a message.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "skipped"
                ]
              },
              "message": {
                "description": "Metadata associated with the step.",
                "type": "string"
              },
              "metadata": {
                "description": "Skipped metadata associated with the step."
              }
            },
            "required": [
              "kind",
              "message",
              "metadata"
            ]
          }
        ]
      },
      "StepOutcomeForWicketdEngineSpec": {
        "oneOf": [
          {
            "description": "The step completed successfully.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "success"
                ]
              },
              "metadata": {
                "description": "Completion metadata associated with the step."
              }
            },
            "required": [
              "kind",
              "metadata"
            ]
          },
          {
            "description": "The step completed with a warning.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "warning"
                ]
              },
              "message": {
                "description": "A warning message.",
                "type": "string"
              },
              "metadata": {
                "description": "Completion metadata associated with the step."
              }
            },
            "required": [
              "kind",
              "message",
              "metadata"
            ]
          },
          {
            "description": "The step was skipped with a message.",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "skipped"
                ]
              },
              "message": {
                "description": "Metadata associated with the step.",
                "type": "string"
              },
              "metadata": {
                "description": "Skipped metadata associated with the step."
              }
            },
            "required": [
              "kind",
              "message",
              "metadata"
            ]
          }
        ]
      },
      "UpdateComponent": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "component": {
                "type": "string",
                "enum": [
                  "rot"
                ]
              }
            },
            "required": [
              "component"
            ]
          },
          {
            "type": "object",
            "properties": {
              "component": {
                "type": "string",
                "enum": [
                  "sp"
                ]
              }
            },
            "required": [
              "component"
            ]
          },
          {
            "type": "object",
            "properties": {
              "component": {
                "type": "string",
                "enum": [
                  "host"
                ]
              }
            },
            "required": [
              "component"
            ]
          }
        ]
      },
      "UpdateStepId": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "set_host_power_state"
                ]
              },
              "state": {
                "$ref": "#/components/schemas/PowerState"
              }
            },
            "required": [
              "id",
              "state"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "interrogate_rot"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "reset_rot"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "reset_sp"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "sp_component_update"
                ]
              },
              "stage": {
                "$ref": "#/components/schemas/SpComponentUpdateStage"
              }
            },
            "required": [
              "id",
              "stage"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "setting_installinator_image_id"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "clearing_installinator_image_id"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "setting_host_startup_options"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "waiting_for_trampoline_phase2_upload"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "downloading_installinator"
                ]
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "running_installinator"
                ]
              }
            },
            "required": [
              "id"
            ]
          }
        ]
      },
      "IgnitionCommand": {
        "description": "Ignition command.",
        "type": "string",
        "enum": [
          "power_on",
          "power_off",
          "power_reset"
        ]
      }
    }
  }
}