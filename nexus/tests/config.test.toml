#
# Oxide API: configuration file for test suite
#

[console]
# Directory for static assets. Absolute path or relative to CWD.
static_dir = "tests/static"
session_idle_timeout_minutes = 60
session_absolute_timeout_minutes = 480

# List of authentication schemes to support.
[authn]
schemes_external = ["spoof", "session_cookie"]

#
# NOTE: for the test suite, if mode = "file", the file path MUST be the sentinel
# string "UNUSED".  The actual path will be generated by the test suite for each
# test.
#
[log]
level = "trace"
mode = "file"
if_exists = "fail"
path = "UNUSED"

# Configuration for interacting with the timeseries database. This is overwritten
# by the test suite once ClickHouse starts, with the actual address on which it
# is listening.
[timeseries_db]
address = "[::1]:0"

# Tunable parameters used during tests
[tunables]
# Allow small subnets, so we can test IP address exhaustion easily / quickly
max_vpc_ipv4_subnet_prefix = 29

[deployment]
# Identifier for this instance of Nexus.
# NOTE: The test suite always overrides this.
id = "e6bff1ff-24fb-49dc-a54e-c6a350cd4d6c"
rack_id = "c19a698f-c6f9-4a17-ae30-20d711b8f7dc"
techport_external_server_port = 0

# Nexus may need to resolve external hosts (e.g. to grab IdP metadata).
# These are the DNS servers it should use.
external_dns_servers = ["1.1.1.1", "9.9.9.9"]

[deployment.dropshot_external]
# NOTE: for the test suite, the port MUST be 0 (in order to bind to any
# available port) because the test suite will be running many servers
# concurrently.
bind_address = "127.0.0.1:0"
request_body_max_bytes = 8388608

[deployment.dropshot_internal]
bind_address = "127.0.0.1:0"
request_body_max_bytes = 8388608

#
# NOTE: for the test suite, the internal DNS address will be replaced with one
# that's started by the test runner.
#
[deployment.internal_dns]
type = "from_subnet"
subnet.net = "fd00:1122:3344:0100::/56"

#
# NOTE: for the test suite, the database URL will be replaced with one
# appropriate for the database that's started by the test runner.
#
[deployment.database]
type = "from_url"
url = "postgresql://root@127.0.0.1:0/omicron?sslmode=disable"

# Dendrite (dataplane daemon) API configuration
[dendrite.switch0]
address = "[::1]:12224"

[background_tasks]
dns_internal.period_secs_config = 60
dns_internal.period_secs_servers = 60
dns_internal.period_secs_propagation = 60
dns_internal.max_concurrent_server_updates = 5
dns_external.period_secs_config = 60
dns_external.period_secs_servers = 60
dns_external.period_secs_propagation = 60
dns_external.max_concurrent_server_updates = 5
metrics_producer_gc.period_secs = 60
# How frequently we check the list of stored TLS certificates.  This is
# approximately an upper bound on how soon after updating the list of
# certificates it will take _other_ Nexus instances to notice and stop serving
# them (on a sunny day).
external_endpoints.period_secs = 60
nat_cleanup.period_secs = 30
bfd_manager.period_secs = 30
# How frequently to collect hardware/software inventory from the whole system
# (even if we don't have reason to believe anything has changed).
inventory.period_secs = 600
# Maximum number of past collections to keep in the database
inventory.nkeep = 3
# Disable inventory collection altogether (for emergencies)
inventory.disable = false
phantom_disks.period_secs = 30
blueprints.period_secs_load = 100
blueprints.period_secs_execute = 600
sync_service_zone_nat.period_secs = 30
switch_port_settings_manager.period_secs = 30
region_replacement.period_secs = 30

[default_region_allocation_strategy]
# we only have one sled in the test environment, so we need to use the
# `Random` strategy, instead of `RandomWithDistinctSleds`
type = "random"
