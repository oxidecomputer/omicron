[package]
name = "omicron-nexus"
version = "0.1.0"
edition = "2021"
license = "MPL-2.0"

[build-dependencies]
omicron-rpaths.workspace = true

[dependencies]
anyhow.workspace = true
assert_matches.workspace = true
async-trait.workspace = true
base64.workspace = true
buf-list.workspace = true
bytes.workspace = true
cancel-safe-futures.workspace = true
camino.workspace = true
camino-tempfile.workspace = true
clap.workspace = true
chrono.workspace = true
crucible-agent-client.workspace = true
crucible-pantry-client.workspace = true
dns-service-client.workspace = true
dpd-client.workspace = true
mg-admin-client.workspace = true
dropshot.workspace = true
fatfs.workspace = true
futures.workspace = true
gateway-client.workspace = true
headers.workspace = true
hex.workspace = true
http.workspace = true
hyper.workspace = true
illumos-utils.workspace = true
internal-dns.workspace = true
ipnetwork.workspace = true
macaddr.workspace = true
mime_guess.workspace = true
# Not under "dev-dependencies"; these also need to be implemented for
# integration tests.
nexus-test-interface.workspace = true
num-integer.workspace = true
once_cell.workspace = true
openssl.workspace = true
oximeter-client.workspace = true
oximeter-db.workspace = true
parse-display.workspace = true
paste.workspace = true
# See omicron-rpaths for more about the "pq-sys" dependency.
pq-sys = "*"
progenitor-client.workspace = true
propolis-client.workspace = true
rand.workspace = true
ref-cast.workspace = true
reqwest = { workspace = true, features = ["json"] }
ring.workspace = true
samael.workspace = true
schemars = { workspace = true, features = ["chrono", "uuid1"] }
semver.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_urlencoded.workspace = true
serde_with.workspace = true
sled-agent-client.workspace = true
slog.workspace = true
slog-async.workspace = true
slog-dtrace.workspace = true
slog-error-chain.workspace = true
slog-term.workspace = true
steno.workspace = true
tempfile.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full"] }
tokio-postgres = { workspace = true, features = ["with-serde_json-1"] }
tough.workspace = true
trust-dns-resolver.workspace = true
uuid.workspace = true

nexus-defaults.workspace = true
nexus-db-model.workspace = true
nexus-db-queries.workspace = true
nexus-deployment.workspace = true
nexus-inventory.workspace = true
nexus-types.workspace = true
omicron-common.workspace = true
omicron-passwords.workspace = true
oximeter.workspace = true
oximeter-instruments = { workspace = true, features = ["http-instruments"] }
oximeter-producer.workspace = true
rustls = { workspace = true }
rustls-pemfile = { workspace = true }
update-common.workspace = true
omicron-workspace-hack.workspace = true

[dev-dependencies]
async-bb8-diesel.workspace = true
camino-tempfile.workspace = true
criterion.workspace = true
diesel.workspace = true
dns-server.workspace = true
expectorate.workspace = true
hyper-rustls.workspace = true
itertools.workspace = true
gateway-messages.workspace = true
gateway-test-utils.workspace = true
hubtools.workspace = true
nexus-test-utils-macros.workspace = true
nexus-test-utils.workspace = true
omicron-sled-agent.workspace = true
omicron-test-utils.workspace = true
openapi-lint.workspace = true
openapiv3.workspace = true
oxide-client.workspace = true
pem.workspace = true
petgraph.workspace = true
pretty_assertions.workspace = true
rcgen.workspace = true
regex.workspace = true
similar-asserts.workspace = true
sp-sim.workspace = true
rustls = { workspace = true }
subprocess.workspace = true
term.workspace = true
trust-dns-resolver.workspace = true
tufaceous.workspace = true
tufaceous-lib.workspace = true
httptest.workspace = true
strum.workspace = true

[[bench]]
name = "setup_benchmark"
harness = false

#
# Disable doc builds by default for our binaries to work around issue
# rust-lang/cargo#8373.  These docs would not be very useful anyway.
#
[[bin]]
name = "nexus"
doc = false
