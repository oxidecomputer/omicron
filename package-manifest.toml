# This manifest describes packages which will be ingested by
# the "omicron-package" tool - instructing how they should be
# build, thrown into a tarball, and installed on the target system.

[package.omicron-sled-agent]
service_name = "sled-agent"
rust.binary_names = ["sled-agent"]
rust.release = true
zone = false
[[package.omicron-sled-agent.paths]]
from = "smf/sled-agent"
to = "pkg"

[package.omicron-nexus]
rust.binary_names = ["nexus"]
rust.release = true
service_name = "nexus"
zone = true
setup_hint = """
- Run `./tools/ci_download_console` to download the web console assets
- Run `pkg install library/postgresql-13` to download Postgres libraries
"""

[[package.omicron-nexus.paths]]
from = "/opt/ooce/pgsql-13/lib/amd64"
to = "/opt/ooce/pgsql-13/lib/amd64"
[[package.omicron-nexus.paths]]
from = "smf/nexus"
to = "/var/svc/manifest/site/nexus"
[[package.omicron-nexus.paths]]
from = "out/console-assets"
to = "/var/nexus/static"

[package.oximeter-collector]
rust.binary_names = ["oximeter"]
rust.release = true
service_name = "oximeter"
zone = true
[[package.oximeter-collector.paths]]
from = "smf/oximeter"
to = "/var/svc/manifest/site/oximeter"

[package.clickhouse]
service_name = "clickhouse"
zone = true
setup_hint = "Run `./tools/ci_download_clickhouse` to download the necessary binaries"
[[package.clickhouse.paths]]
from = "out/clickhouse"
to = "/opt/oxide/clickhouse"
[[package.clickhouse.paths]]
from = "smf/clickhouse"
to = "/var/svc/manifest/site/clickhouse"

[package.cockroachdb]
service_name = "cockroachdb"
zone = true
setup_hint = "Run `./tools/ci_download_cockroachdb` to download the necessary binaries"
[[package.cockroachdb.paths]]
from = "out/cockroachdb"
to = "/opt/oxide/cockroachdb"
[[package.cockroachdb.paths]]
from = "common/src/sql"
to = "/opt/oxide/cockroachdb/sql"
[[package.cockroachdb.paths]]
from = "smf/cockroachdb"
to = "/var/svc/manifest/site/cockroachdb"

[package.internal-dns]
rust.binary_names = ["dnsadm", "dns-server"]
rust.release = true
service_name = "internal-dns"
zone = true
[[package.internal-dns.paths]]
from = "smf/internal-dns"
to = "/var/svc/manifest/site/internal-dns"

# Packages not built within Omicron, but which must be imported.

# Refer to
#   https://github.com/oxidecomputer/crucible/blob/main/package/README.md
# for instructions on building this manually.
[external_package.crucible]
service_name = "crucible"
zone = true
[external_package.crucible.source]
# To manually override the package source (for example, to test a change in
# both Crucible and Omicron simultaneously):
#
# 1. Build the zone image manually
# 2. Copy the output zone image from crucible/out to omicron/out
# 3. Use type = "manual" instead of the "prebuilt"
type = "prebuilt"
repo = "crucible"
commit = "fed3e8ca7762130ee146fc516a4ef6eed2b91629"
# The SHA256 digest is automatically posted to:
# https://buildomat.eng.oxide.computer/public/file/oxidecomputer/crucible/image/<commit>/crucible.sha256.txt
sha256 = "050c94ff6f21bfcbaa2594f0f11922027822d8617e1a465484f92745d4b0fc12"

# Refer to
#   https://github.com/oxidecomputer/propolis/blob/master/package/README.md
# for instructions on building this manually.
[external_package.propolis-server]
service_name = "propolis-server"
zone = true
[external_package.propolis-server.source]
type = "prebuilt"
repo = "propolis"
commit = "23a38f4a1df4afcba3905f94ebbf312d0d187c7d"
# The SHA256 digest is automatically posted to:
# https://buildomat.eng.oxide.computer/public/file/oxidecomputer/propolis/image/<commit>/propolis-server.sha256.txt
sha256 = "9c1f23c8db27c6fe114ae05358f76d88a8be803e622ad8d09a6c654692c2ffb8"

[external_package.maghemite]
service_name = "mg-ddm"
zone = false
[external_package.maghemite.source]
type = "prebuilt"
repo = "maghemite"
# Updating the commit hash here currently requires also updating
# `tools/maghemite_openapi_version`. Failing to do so will cause a failure when
# building `ddm-admin-client` (which will instruct you to update
# `tools/maghemite_openapi_version`).
commit = "2be097ddd1d3fd8e7f56bc0a4bfd696253b11454"
# The SHA256 digest is automatically posted to:
# https://buildomat.eng.oxide.computer/public/file/oxidecomputer/maghemite/image/<commit>/mg-ddm.sha256.txt
sha256 = "94218915ec6fed75dcc81d736bd5e9ef62c9eb651a67a943b297d94d6b390941"

[external_package.dendrite]
service_name = "dendrite"
zone = true
[external_package.dendrite.source]
# To manually override the package source:
#
# 1. Build the zone image manually
#   1a. cd <dendrite tree>
#   1b. cargo build --features=<tofino_stub|tofino_asic|softnpu>
#   1c. cargo xtask dist -o
# 2. Copy the output zone image from dendrite/out to omicron/out
# 3. Use type = "manual" instead of the "prebuilt"
type = "prebuilt"
repo = "dendrite"
commit = "e752af977c167fa64625231a74bedcbfa5457008"
sha256 = "ddb7c271f4d4b68332adc69b32f90e728f07b1395e01cffd7e71230c2c648c63"
