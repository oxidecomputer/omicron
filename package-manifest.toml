# This manifest describes packages which will be ingested by
# the "omicron-package" tool - instructing how they should be
# build, thrown into a tarball, and installed on the target system.

[package.omicron-sled-agent]
service_name = "sled-agent"
source.type = "local"
source.rust.binary_names = ["sled-agent"]
source.rust.release = true
source.paths = [ { from = "smf/sled-agent", to = "pkg" } ]
output.type = "tarball"

[package.omicron-nexus]
service_name = "nexus"
source.type = "local"
source.rust.binary_names = ["nexus"]
source.rust.release = true
source.paths = [
  { from = "/opt/ooce/pgsql-13/lib/amd64", to = "/opt/ooce/pgsql-13/lib/amd64" },
  { from = "smf/nexus", to = "/var/svc/manifest/site/nexus" },
  { from = "out/console-assets", to = "/var/nexus/static" },
]
output.type = "zone"
setup_hint = """
- Run `./tools/ci_download_console` to download the web console assets
- Run `pkg install library/postgresql-13` to download Postgres libraries
"""

[package.oximeter-collector]
service_name = "oximeter"
source.type = "local"
source.rust.binary_names = ["oximeter"]
source.rust.release = true
source.paths = [ { from = "smf/oximeter", to = "/var/svc/manifest/site/oximeter" } ]
output.type = "zone"

[package.clickhouse]
service_name = "clickhouse"
source.type = "local"
source.paths = [
  { from = "out/clickhouse", to = "/opt/oxide/clickhouse" },
  { from = "smf/clickhouse", to = "/var/svc/manifest/site/clickhouse" }
]
output.type = "zone"
setup_hint = "Run `./tools/ci_download_clickhouse` to download the necessary binaries"

[package.cockroachdb]
service_name = "cockroachdb"
source.type = "local"
source.paths = [
  { from = "out/cockroachdb", to = "/opt/oxide/cockroachdb" },
  { from = "common/src/sql", to = "/opt/oxide/cockroachdb/sql" },
  { from = "smf/cockroachdb", to = "/var/svc/manifest/site/cockroachdb" },
]
output.type = "zone"
setup_hint = "Run `./tools/ci_download_cockroachdb` to download the necessary binaries"

[package.internal-dns]
service_name = "internal_dns"
source.type = "local"
source.rust.binary_names = ["dnsadm", "dns-server"]
source.rust.release = true
source.paths = [ { from = "smf/internal-dns", to = "/var/svc/manifest/site/internal_dns" } ]
output.type = "zone"

[package.omicron-gateway]
service_name = "mgs"
source.type = "local"
source.rust.binary_names = ["mgs"]
source.rust.release = true
source.paths = [ { from = "smf/mgs", to = "/var/svc/manifest/site/mgs" } ]
output.type = "zone"
output.intermediate_only = true

[package.wicketd]
service_name = "wicketd"
source.type = "local"
source.rust.binary_names = ["wicketd"]
source.rust.release = true
source.paths = [ { from = "smf/wicketd", to = "/var/svc/manifest/site/wicketd" } ]
output.type = "zone"
output.intermediate_only = true

[package.wicket]
service_name = "wicket"
source.type = "local"
source.rust.binary_names = ["wicket"]
source.rust.release = true
output.type = "zone"
output.intermediate_only = true


# Packages not built within Omicron, but which must be imported.

# Refer to
#   https://github.com/oxidecomputer/crucible/blob/main/package/README.md
# for instructions on building this manually.
[package.crucible]
service_name = "crucible"
# To manually override the package source (for example, to test a change in
# both Crucible and Omicron simultaneously):
#
# 1. Build the zone image manually
# 2. Copy the output zone image from crucible/out to omicron/out
# 3. Use source.type = "manual" instead of "prebuilt"
source.type = "prebuilt"
source.repo = "crucible"
source.commit = "fb671895e8adb3cab5e801bbbe8728997178aba4"
# The SHA256 digest is automatically posted to:
# https://buildomat.eng.oxide.computer/public/file/oxidecomputer/crucible/image/<commit>/crucible.sha256.txt
source.sha256 = "227761dcba9372619c71fcf7137a7a98c4d618192cbaa6f41031c4429ab99c04"
output.type = "zone"

[package.crucible-pantry]
service_name = "crucible_pantry"
source.type = "prebuilt"
source.repo = "crucible"
source.commit = "fb671895e8adb3cab5e801bbbe8728997178aba4"
# The SHA256 digest is automatically posted to:
# https://buildomat.eng.oxide.computer/public/file/oxidecomputer/crucible/image/<commit>/crucible-pantry.sha256.txt
source.sha256 = "bf648339cfd010bad65186584fe34108cc1f27162c62e11f1d18b1fe89a43ddc"
output.type = "zone"

# Refer to
#   https://github.com/oxidecomputer/propolis/blob/master/package/README.md
# for instructions on building this manually.
[package.propolis-server]
service_name = "propolis-server"
source.type = "prebuilt"
source.repo = "propolis"
source.commit = "880a031fbdd7417cd3a4643f8bf419d8d5ea8224"
# The SHA256 digest is automatically posted to:
# https://buildomat.eng.oxide.computer/public/file/oxidecomputer/propolis/image/<commit>/propolis-server.sha256.txt
source.sha256 = "93265033a62a998ebc2d64ed3c0f0d4a97c16d34132d3d59660f5430a24990e9"
output.type = "zone"

[package.maghemite]
service_name = "mg-ddm"
source.type = "prebuilt"
source.repo = "maghemite"
# Updating the commit hash here currently requires also updating
# `tools/maghemite_openapi_version`. Failing to do so will cause a failure when
# building `ddm-admin-client` (which will instruct you to update
# `tools/maghemite_openapi_version`).
source.commit = "459ca9f302b78c78aafc836d9ace7c22067f0b65"
# The SHA256 digest is automatically posted to:
# https://buildomat.eng.oxide.computer/public/file/oxidecomputer/maghemite/image/<commit>/maghemite.sha256.txt
source.sha256 = "c365c25f87cb13d2960dc196cd18849dc99bbba0f992f7cb4168feff47fa855d"
output.type = "tarball"

[package.dendrite-stub]
service_name = "dendrite"
only_for_targets.switch_variant = "stub"
# To manually override the package source:
#
# 1. Build the zone image manually
#   1a. cd <dendrite tree>
#   1b. cargo build --features=tofino_stub --release
#   1c. cargo xtask dist -o -r --features tofino_stub
# 2. Copy dendrite.tar.gz from dendrite/out to omicron/out
# 3. Use source.type = "manual" instead of "prebuilt"
source.type = "prebuilt"
source.repo = "dendrite"
source.commit = "10e305a52c45bee91ffb16f6d3ad7a5cc3100e73"
source.sha256 = "3142e71f7eb61e258dab3f6bf02e37ccfc2a0b2eeb134aadfe62603092175430"
output.type = "zone"
output.intermediate_only = true

[package.dendrite-asic]
service_name = "dendrite"
only_for_targets.switch_variant = "asic"
# To manually override the package source:
#
# 1. Build the zone image manually
#   1a. cd <dendrite tree>
#   1b. cargo build --features=tofino_asic --release
#   1c. cargo xtask dist -o -r --features tofino_asic
# 2. Copy the output zone image from dendrite/out to omicron/out
# 3. Use source.type = "manual" instead of "prebuilt"
source.type = "prebuilt"
source.repo = "dendrite"
source.commit = "10e305a52c45bee91ffb16f6d3ad7a5cc3100e73"
source.sha256 = "5bf81b8678fde53508d50cda973e2c8eacbe8b29a2e76e3809cdb1156c632702"
output.type = "zone"
output.intermediate_only = true

# To package and install the asic variant of the switch, do:
#
# $ cargo run --release -p omicron-package -- -t switch_variant=asic package
# $ pfexec ./target/release/omicron-package -t switch_variant=asic install
[package.switch-asic]
service_name = "switch"
only_for_targets.switch_variant = "asic"
source.type = "composite"
source.packages = [ "omicron-gateway.tar.gz", "dendrite-asic.tar.gz", "wicketd.tar.gz", "wicket.tar.gz" ]
output.type = "zone"

# To package and install the stub variant of the switch, do the following:
#
# - Set the sled agent's configuration option "stub_scrimlet" to "true"
# - Run the following:
# $ cargo run --release -p omicron-package -- -t switch_variant=stub package
# $ pfexec ./target/release/omicron-package -t switch_variant=stub install
[package.switch-stub]
service_name = "switch"
only_for_targets.switch_variant = "stub"
source.type = "composite"
source.packages = [ "omicron-gateway.tar.gz", "dendrite-stub.tar.gz", "wicketd.tar.gz", "wicket.tar.gz" ]
output.type = "zone"
